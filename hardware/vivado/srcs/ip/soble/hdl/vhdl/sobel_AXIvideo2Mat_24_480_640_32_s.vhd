-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2015.2
-- Copyright (C) 2015 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sobel_AXIvideo2Mat_24_480_640_32_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    video_in_TDATA : IN STD_LOGIC_VECTOR (23 downto 0);
    video_in_TVALID : IN STD_LOGIC;
    video_in_TREADY : OUT STD_LOGIC;
    video_in_TKEEP : IN STD_LOGIC_VECTOR (2 downto 0);
    video_in_TSTRB : IN STD_LOGIC_VECTOR (2 downto 0);
    video_in_TUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    video_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    video_in_TID : IN STD_LOGIC_VECTOR (0 downto 0);
    video_in_TDEST : IN STD_LOGIC_VECTOR (0 downto 0);
    img_rows_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    img_rows_V_empty_n : IN STD_LOGIC;
    img_rows_V_read : OUT STD_LOGIC;
    img_cols_V_dout : IN STD_LOGIC_VECTOR (11 downto 0);
    img_cols_V_empty_n : IN STD_LOGIC;
    img_cols_V_read : OUT STD_LOGIC;
    img_data_stream_0_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_data_stream_0_V_full_n : IN STD_LOGIC;
    img_data_stream_0_V_write : OUT STD_LOGIC;
    img_data_stream_1_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_data_stream_1_V_full_n : IN STD_LOGIC;
    img_data_stream_1_V_write : OUT STD_LOGIC;
    img_data_stream_2_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_data_stream_2_V_full_n : IN STD_LOGIC;
    img_data_stream_2_V_write : OUT STD_LOGIC );
end;


architecture behav of sobel_AXIvideo2Mat_24_480_640_32_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_pp1_stg0_fsm_4 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_st7_fsm_5 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_st8_fsm_6 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_true : BOOLEAN := true;

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_26 : BOOLEAN;
    signal eol_reg_176 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_data_V_1_i_reg_187 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_1_i_reg_198 : STD_LOGIC_VECTOR (11 downto 0);
    signal eol_i_reg_209 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_last_V_2_i_reg_221 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_reg_233 : STD_LOGIC_VECTOR (23 downto 0);
    signal eol_2_i_reg_245 : STD_LOGIC_VECTOR (0 downto 0);
    signal rows_V_reg_383 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_sig_bdd_85 : BOOLEAN;
    signal cols_V_reg_388 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_data_V_reg_393 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_97 : BOOLEAN;
    signal tmp_last_V_reg_401 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond1_i_fu_310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_111 : BOOLEAN;
    signal i_V_fu_315_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal i_V_reg_417 : STD_LOGIC_VECTOR (11 downto 0);
    signal exitcond2_i_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond2_i_reg_422 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_pp1_stg0_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_122 : BOOLEAN;
    signal brmerge_i_fu_335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_bdd_130 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it0 : STD_LOGIC := '0';
    signal ap_sig_bdd_143 : BOOLEAN;
    signal ap_reg_ppiten_pp1_it1 : STD_LOGIC := '0';
    signal j_V_fu_326_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_354_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_reg_435 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_44_reg_440 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_45_reg_445 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_168 : BOOLEAN;
    signal ap_sig_bdd_173 : BOOLEAN;
    signal axi_last_V_3_i_reg_256 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_last_V1_i_reg_145 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st8_fsm_6 : STD_LOGIC;
    signal ap_sig_bdd_191 : BOOLEAN;
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_198 : BOOLEAN;
    signal axi_data_V_3_i_reg_268 : STD_LOGIC_VECTOR (23 downto 0);
    signal axi_data_V1_i_reg_155 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_i_reg_165 : STD_LOGIC_VECTOR (11 downto 0);
    signal eol_phi_fu_179_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_data_V_1_i_phi_fu_190_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal eol_i_phi_fu_213_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_axi_last_V_2_i_reg_221pp1_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_phiprechg_p_Val2_s_reg_233pp1_it0 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Val2_s_phi_fu_237_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_reg_phiprechg_eol_2_i_reg_245pp1_it0 : STD_LOGIC_VECTOR (0 downto 0);
    signal axi_last_V_1_mux_i_fu_347_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal eol_3_i_reg_280 : STD_LOGIC_VECTOR (0 downto 0);
    signal sof_1_i_fu_90 : STD_LOGIC_VECTOR (0 downto 0);
    signal not_sof_2_i_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_user_V_fu_301_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_sig_bdd_129 : BOOLEAN;
    signal ap_sig_bdd_221 : BOOLEAN;
    signal ap_sig_bdd_154 : BOOLEAN;
    signal ap_sig_bdd_241 : BOOLEAN;


begin




    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- ap_done_reg assign process. --
    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_continue)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((exitcond1_i_fu_310_p2 = ap_const_lv1_0)))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it0 assign process. --
    ap_reg_ppiten_pp1_it0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and not(((ap_sig_bdd_130 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_143 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not((exitcond2_i_fu_321_p2 = ap_const_lv1_0)))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (exitcond1_i_fu_310_p2 = ap_const_lv1_0))) then 
                    ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    -- ap_reg_ppiten_pp1_it1 assign process. --
    ap_reg_ppiten_pp1_it1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond2_i_fu_321_p2 = ap_const_lv1_0) and not(((ap_sig_bdd_130 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_143 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
                elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (exitcond1_i_fu_310_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and not(((ap_sig_bdd_130 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_143 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not((exitcond2_i_fu_321_p2 = ap_const_lv1_0))))) then 
                    ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- axi_data_V1_i_reg_155 assign process. --
    axi_data_V1_i_reg_155_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                axi_data_V1_i_reg_155 <= tmp_data_V_reg_393;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_6)) then 
                axi_data_V1_i_reg_155 <= axi_data_V_3_i_reg_268;
            end if; 
        end if;
    end process;

    -- axi_data_V_1_i_reg_187 assign process. --
    axi_data_V_1_i_reg_187_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond2_i_reg_422 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_sig_bdd_130 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_143 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then 
                axi_data_V_1_i_reg_187 <= p_Val2_s_reg_233;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (exitcond1_i_fu_310_p2 = ap_const_lv1_0))) then 
                axi_data_V_1_i_reg_187 <= axi_data_V1_i_reg_155;
            end if; 
        end if;
    end process;

    -- axi_data_V_3_i_reg_268 assign process. --
    axi_data_V_3_i_reg_268_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_130 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_143 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not((exitcond2_i_fu_321_p2 = ap_const_lv1_0)))) then 
                axi_data_V_3_i_reg_268 <= axi_data_V_1_i_phi_fu_190_p4;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_5) and (ap_const_lv1_0 = eol_3_i_reg_280) and not(ap_sig_bdd_173))) then 
                axi_data_V_3_i_reg_268 <= video_in_TDATA;
            end if; 
        end if;
    end process;

    -- axi_last_V1_i_reg_145 assign process. --
    axi_last_V1_i_reg_145_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                axi_last_V1_i_reg_145 <= tmp_last_V_reg_401;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_6)) then 
                axi_last_V1_i_reg_145 <= axi_last_V_3_i_reg_256;
            end if; 
        end if;
    end process;

    -- axi_last_V_2_i_reg_221 assign process. --
    axi_last_V_2_i_reg_221_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_154) then
                if (ap_sig_bdd_221) then 
                    axi_last_V_2_i_reg_221 <= eol_phi_fu_179_p4;
                elsif (ap_sig_bdd_129) then 
                    axi_last_V_2_i_reg_221 <= video_in_TLAST;
                elsif ((ap_true = ap_true)) then 
                    axi_last_V_2_i_reg_221 <= ap_reg_phiprechg_axi_last_V_2_i_reg_221pp1_it0;
                end if;
            end if; 
        end if;
    end process;

    -- axi_last_V_3_i_reg_256 assign process. --
    axi_last_V_3_i_reg_256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_130 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_143 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not((exitcond2_i_fu_321_p2 = ap_const_lv1_0)))) then 
                axi_last_V_3_i_reg_256 <= eol_phi_fu_179_p4;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_5) and (ap_const_lv1_0 = eol_3_i_reg_280) and not(ap_sig_bdd_173))) then 
                axi_last_V_3_i_reg_256 <= video_in_TLAST;
            end if; 
        end if;
    end process;

    -- eol_2_i_reg_245 assign process. --
    eol_2_i_reg_245_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_154) then
                if (ap_sig_bdd_221) then 
                    eol_2_i_reg_245 <= axi_last_V_1_mux_i_fu_347_p2;
                elsif (ap_sig_bdd_129) then 
                    eol_2_i_reg_245 <= video_in_TLAST;
                elsif ((ap_true = ap_true)) then 
                    eol_2_i_reg_245 <= ap_reg_phiprechg_eol_2_i_reg_245pp1_it0;
                end if;
            end if; 
        end if;
    end process;

    -- eol_3_i_reg_280 assign process. --
    eol_3_i_reg_280_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_130 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_143 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not((exitcond2_i_fu_321_p2 = ap_const_lv1_0)))) then 
                eol_3_i_reg_280 <= eol_i_phi_fu_213_p4;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_5) and (ap_const_lv1_0 = eol_3_i_reg_280) and not(ap_sig_bdd_173))) then 
                eol_3_i_reg_280 <= video_in_TLAST;
            end if; 
        end if;
    end process;

    -- eol_i_reg_209 assign process. --
    eol_i_reg_209_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond2_i_reg_422 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_sig_bdd_130 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_143 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then 
                eol_i_reg_209 <= eol_2_i_reg_245;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (exitcond1_i_fu_310_p2 = ap_const_lv1_0))) then 
                eol_i_reg_209 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    -- eol_reg_176 assign process. --
    eol_reg_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond2_i_reg_422 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_sig_bdd_130 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_143 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then 
                eol_reg_176 <= axi_last_V_2_i_reg_221;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (exitcond1_i_fu_310_p2 = ap_const_lv1_0))) then 
                eol_reg_176 <= axi_last_V1_i_reg_145;
            end if; 
        end if;
    end process;

    -- p_1_i_reg_198 assign process. --
    p_1_i_reg_198_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond2_i_fu_321_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_130 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_143 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then 
                p_1_i_reg_198 <= j_V_fu_326_p2;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and (exitcond1_i_fu_310_p2 = ap_const_lv1_0))) then 
                p_1_i_reg_198 <= ap_const_lv12_0;
            end if; 
        end if;
    end process;

    -- p_Val2_s_reg_233 assign process. --
    p_Val2_s_reg_233_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (ap_sig_bdd_154) then
                if (ap_sig_bdd_221) then 
                    p_Val2_s_reg_233 <= axi_data_V_1_i_phi_fu_190_p4;
                elsif (ap_sig_bdd_129) then 
                    p_Val2_s_reg_233 <= video_in_TDATA;
                elsif ((ap_true = ap_true)) then 
                    p_Val2_s_reg_233 <= ap_reg_phiprechg_p_Val2_s_reg_233pp1_it0;
                end if;
            end if; 
        end if;
    end process;

    -- p_i_reg_165 assign process. --
    p_i_reg_165_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                p_i_reg_165 <= ap_const_lv12_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_6)) then 
                p_i_reg_165 <= i_V_reg_417;
            end if; 
        end if;
    end process;

    -- sof_1_i_fu_90 assign process. --
    sof_1_i_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond2_i_fu_321_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_130 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_143 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then 
                sof_1_i_fu_90 <= ap_const_lv1_0;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2)) then 
                sof_1_i_fu_90 <= ap_const_lv1_1;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_85))) then
                cols_V_reg_388 <= img_cols_V_dout;
                rows_V_reg_383 <= img_rows_V_dout;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and not(((ap_sig_bdd_130 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_143 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then
                exitcond2_i_reg_422 <= exitcond2_i_fu_321_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3)) then
                i_V_reg_417 <= i_V_fu_315_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond2_i_fu_321_p2 = ap_const_lv1_0) and not(((ap_sig_bdd_130 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_143 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then
                tmp_44_reg_440 <= p_Val2_s_phi_fu_237_p4(15 downto 8);
                tmp_45_reg_445 <= p_Val2_s_phi_fu_237_p4(23 downto 16);
                tmp_reg_435 <= tmp_fu_354_p1;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((video_in_TVALID = ap_const_logic_0)))) then
                tmp_data_V_reg_393 <= video_in_TDATA;
                tmp_last_V_reg_401 <= video_in_TLAST;
            end if;
        end if;
    end process;

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (ap_CS_fsm, video_in_TVALID, ap_sig_bdd_85, exitcond1_i_fu_310_p2, exitcond2_i_fu_321_p2, ap_sig_bdd_130, ap_reg_ppiten_pp1_it0, ap_sig_bdd_143, ap_reg_ppiten_pp1_it1, ap_sig_bdd_173, eol_3_i_reg_280, tmp_user_V_fu_301_p1)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                if (not(ap_sig_bdd_85)) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                end if;
            when ap_ST_st2_fsm_1 => 
                if ((not((video_in_TVALID = ap_const_logic_0)) and (ap_const_lv1_0 = tmp_user_V_fu_301_p1))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                elsif ((not((video_in_TVALID = ap_const_logic_0)) and not((ap_const_lv1_0 = tmp_user_V_fu_301_p1)))) then
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                else
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                end if;
            when ap_ST_st3_fsm_2 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when ap_ST_st4_fsm_3 => 
                if (not((exitcond1_i_fu_310_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_4;
                end if;
            when ap_ST_pp1_stg0_fsm_4 => 
                if (not(((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_130 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_143 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not((exitcond2_i_fu_321_p2 = ap_const_lv1_0))))) then
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_4;
                elsif (((ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_130 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_143 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))) and not((exitcond2_i_fu_321_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_5;
                else
                    ap_NS_fsm <= ap_ST_pp1_stg0_fsm_4;
                end if;
            when ap_ST_st7_fsm_5 => 
                if (((ap_const_lv1_0 = eol_3_i_reg_280) and not(ap_sig_bdd_173))) then
                    ap_NS_fsm <= ap_ST_st7_fsm_5;
                elsif ((not(ap_sig_bdd_173) and not((ap_const_lv1_0 = eol_3_i_reg_280)))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_6;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_5;
                end if;
            when ap_ST_st8_fsm_6 => 
                ap_NS_fsm <= ap_ST_st4_fsm_3;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;

    -- ap_done assign process. --
    ap_done_assign_proc : process(ap_done_reg, exitcond1_i_fu_310_p2, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_done_reg) or ((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((exitcond1_i_fu_310_p2 = ap_const_lv1_0))))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_idle assign process. --
    ap_idle_assign_proc : process(ap_start, ap_sig_cseq_ST_st1_fsm_0)
    begin
        if ((not((ap_const_logic_1 = ap_start)) and (ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_ready assign process. --
    ap_ready_assign_proc : process(exitcond1_i_fu_310_p2, ap_sig_cseq_ST_st4_fsm_3)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((exitcond1_i_fu_310_p2 = ap_const_lv1_0)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_reg_phiprechg_axi_last_V_2_i_reg_221pp1_it0 <= "X";
    ap_reg_phiprechg_eol_2_i_reg_245pp1_it0 <= "X";
    ap_reg_phiprechg_p_Val2_s_reg_233pp1_it0 <= "XXXXXXXXXXXXXXXXXXXXXXXX";

    -- ap_sig_bdd_111 assign process. --
    ap_sig_bdd_111_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_111 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_122 assign process. --
    ap_sig_bdd_122_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_122 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_bdd_129 assign process. --
    ap_sig_bdd_129_assign_proc : process(exitcond2_i_fu_321_p2, brmerge_i_fu_335_p2)
    begin
                ap_sig_bdd_129 <= ((exitcond2_i_fu_321_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = brmerge_i_fu_335_p2));
    end process;


    -- ap_sig_bdd_130 assign process. --
    ap_sig_bdd_130_assign_proc : process(video_in_TVALID, exitcond2_i_fu_321_p2, brmerge_i_fu_335_p2)
    begin
                ap_sig_bdd_130 <= ((video_in_TVALID = ap_const_logic_0) and (exitcond2_i_fu_321_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = brmerge_i_fu_335_p2));
    end process;


    -- ap_sig_bdd_143 assign process. --
    ap_sig_bdd_143_assign_proc : process(img_data_stream_0_V_full_n, img_data_stream_1_V_full_n, img_data_stream_2_V_full_n, exitcond2_i_reg_422)
    begin
                ap_sig_bdd_143 <= (((img_data_stream_0_V_full_n = ap_const_logic_0) and (exitcond2_i_reg_422 = ap_const_lv1_0)) or ((exitcond2_i_reg_422 = ap_const_lv1_0) and (img_data_stream_1_V_full_n = ap_const_logic_0)) or ((exitcond2_i_reg_422 = ap_const_lv1_0) and (img_data_stream_2_V_full_n = ap_const_logic_0)));
    end process;


    -- ap_sig_bdd_154 assign process. --
    ap_sig_bdd_154_assign_proc : process(ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_sig_bdd_130, ap_reg_ppiten_pp1_it0, ap_sig_bdd_143, ap_reg_ppiten_pp1_it1)
    begin
                ap_sig_bdd_154 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_130 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_143 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))));
    end process;


    -- ap_sig_bdd_168 assign process. --
    ap_sig_bdd_168_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_168 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_173 assign process. --
    ap_sig_bdd_173_assign_proc : process(video_in_TVALID, eol_3_i_reg_280)
    begin
                ap_sig_bdd_173 <= ((video_in_TVALID = ap_const_logic_0) and (ap_const_lv1_0 = eol_3_i_reg_280));
    end process;


    -- ap_sig_bdd_191 assign process. --
    ap_sig_bdd_191_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_191 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    -- ap_sig_bdd_198 assign process. --
    ap_sig_bdd_198_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_198 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_bdd_221 assign process. --
    ap_sig_bdd_221_assign_proc : process(exitcond2_i_fu_321_p2, brmerge_i_fu_335_p2)
    begin
                ap_sig_bdd_221 <= ((exitcond2_i_fu_321_p2 = ap_const_lv1_0) and not((ap_const_lv1_0 = brmerge_i_fu_335_p2)));
    end process;


    -- ap_sig_bdd_241 assign process. --
    ap_sig_bdd_241_assign_proc : process(exitcond2_i_fu_321_p2, ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_reg_ppiten_pp1_it0)
    begin
                ap_sig_bdd_241 <= ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond2_i_fu_321_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0));
    end process;


    -- ap_sig_bdd_26 assign process. --
    ap_sig_bdd_26_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_26 <= (ap_CS_fsm(0 downto 0) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_85 assign process. --
    ap_sig_bdd_85_assign_proc : process(ap_start, ap_done_reg, img_rows_V_empty_n, img_cols_V_empty_n)
    begin
                ap_sig_bdd_85 <= ((img_rows_V_empty_n = ap_const_logic_0) or (img_cols_V_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    -- ap_sig_bdd_97 assign process. --
    ap_sig_bdd_97_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_97 <= (ap_const_lv1_1 = ap_CS_fsm(1 downto 1));
    end process;


    -- ap_sig_cseq_ST_pp1_stg0_fsm_4 assign process. --
    ap_sig_cseq_ST_pp1_stg0_fsm_4_assign_proc : process(ap_sig_bdd_122)
    begin
        if (ap_sig_bdd_122) then 
            ap_sig_cseq_ST_pp1_stg0_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_pp1_stg0_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_26)
    begin
        if (ap_sig_bdd_26) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_97)
    begin
        if (ap_sig_bdd_97) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm_2 assign process. --
    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_bdd_198)
    begin
        if (ap_sig_bdd_198) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st4_fsm_3 assign process. --
    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_bdd_111)
    begin
        if (ap_sig_bdd_111) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st7_fsm_5 assign process. --
    ap_sig_cseq_ST_st7_fsm_5_assign_proc : process(ap_sig_bdd_168)
    begin
        if (ap_sig_bdd_168) then 
            ap_sig_cseq_ST_st7_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st8_fsm_6 assign process. --
    ap_sig_cseq_ST_st8_fsm_6_assign_proc : process(ap_sig_bdd_191)
    begin
        if (ap_sig_bdd_191) then 
            ap_sig_cseq_ST_st8_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    -- axi_data_V_1_i_phi_fu_190_p4 assign process. --
    axi_data_V_1_i_phi_fu_190_p4_assign_proc : process(axi_data_V_1_i_reg_187, p_Val2_s_reg_233, exitcond2_i_reg_422, ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_reg_ppiten_pp1_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond2_i_reg_422 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            axi_data_V_1_i_phi_fu_190_p4 <= p_Val2_s_reg_233;
        else 
            axi_data_V_1_i_phi_fu_190_p4 <= axi_data_V_1_i_reg_187;
        end if; 
    end process;

    axi_last_V_1_mux_i_fu_347_p2 <= (eol_phi_fu_179_p4 or not_sof_2_i_fu_341_p2);
    brmerge_i_fu_335_p2 <= (sof_1_i_fu_90 or eol_i_phi_fu_213_p4);

    -- eol_i_phi_fu_213_p4 assign process. --
    eol_i_phi_fu_213_p4_assign_proc : process(eol_i_reg_209, eol_2_i_reg_245, exitcond2_i_reg_422, ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_reg_ppiten_pp1_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond2_i_reg_422 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            eol_i_phi_fu_213_p4 <= eol_2_i_reg_245;
        else 
            eol_i_phi_fu_213_p4 <= eol_i_reg_209;
        end if; 
    end process;


    -- eol_phi_fu_179_p4 assign process. --
    eol_phi_fu_179_p4_assign_proc : process(eol_reg_176, axi_last_V_2_i_reg_221, exitcond2_i_reg_422, ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_reg_ppiten_pp1_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond2_i_reg_422 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))) then 
            eol_phi_fu_179_p4 <= axi_last_V_2_i_reg_221;
        else 
            eol_phi_fu_179_p4 <= eol_reg_176;
        end if; 
    end process;

    exitcond1_i_fu_310_p2 <= "1" when (p_i_reg_165 = rows_V_reg_383) else "0";
    exitcond2_i_fu_321_p2 <= "1" when (p_1_i_reg_198 = cols_V_reg_388) else "0";
    i_V_fu_315_p2 <= std_logic_vector(unsigned(p_i_reg_165) + unsigned(ap_const_lv12_1));

    -- img_cols_V_read assign process. --
    img_cols_V_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_85)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_85))) then 
            img_cols_V_read <= ap_const_logic_1;
        else 
            img_cols_V_read <= ap_const_logic_0;
        end if; 
    end process;

    img_data_stream_0_V_din <= tmp_reg_435;

    -- img_data_stream_0_V_write assign process. --
    img_data_stream_0_V_write_assign_proc : process(exitcond2_i_reg_422, ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_sig_bdd_130, ap_reg_ppiten_pp1_it0, ap_sig_bdd_143, ap_reg_ppiten_pp1_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond2_i_reg_422 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_sig_bdd_130 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_143 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then 
            img_data_stream_0_V_write <= ap_const_logic_1;
        else 
            img_data_stream_0_V_write <= ap_const_logic_0;
        end if; 
    end process;

    img_data_stream_1_V_din <= tmp_44_reg_440;

    -- img_data_stream_1_V_write assign process. --
    img_data_stream_1_V_write_assign_proc : process(exitcond2_i_reg_422, ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_sig_bdd_130, ap_reg_ppiten_pp1_it0, ap_sig_bdd_143, ap_reg_ppiten_pp1_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond2_i_reg_422 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_sig_bdd_130 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_143 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then 
            img_data_stream_1_V_write <= ap_const_logic_1;
        else 
            img_data_stream_1_V_write <= ap_const_logic_0;
        end if; 
    end process;

    img_data_stream_2_V_din <= tmp_45_reg_445;

    -- img_data_stream_2_V_write assign process. --
    img_data_stream_2_V_write_assign_proc : process(exitcond2_i_reg_422, ap_sig_cseq_ST_pp1_stg0_fsm_4, ap_sig_bdd_130, ap_reg_ppiten_pp1_it0, ap_sig_bdd_143, ap_reg_ppiten_pp1_it1)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond2_i_reg_422 = ap_const_lv1_0) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1) and not(((ap_sig_bdd_130 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_143 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1)))))) then 
            img_data_stream_2_V_write <= ap_const_logic_1;
        else 
            img_data_stream_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    -- img_rows_V_read assign process. --
    img_rows_V_read_assign_proc : process(ap_sig_cseq_ST_st1_fsm_0, ap_sig_bdd_85)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0) and not(ap_sig_bdd_85))) then 
            img_rows_V_read <= ap_const_logic_1;
        else 
            img_rows_V_read <= ap_const_logic_0;
        end if; 
    end process;

    j_V_fu_326_p2 <= std_logic_vector(unsigned(p_1_i_reg_198) + unsigned(ap_const_lv12_1));
    not_sof_2_i_fu_341_p2 <= (sof_1_i_fu_90 xor ap_const_lv1_1);

    -- p_Val2_s_phi_fu_237_p4 assign process. --
    p_Val2_s_phi_fu_237_p4_assign_proc : process(video_in_TDATA, brmerge_i_fu_335_p2, axi_data_V_1_i_phi_fu_190_p4, ap_reg_phiprechg_p_Val2_s_reg_233pp1_it0, ap_sig_bdd_241)
    begin
        if (ap_sig_bdd_241) then
            if (not((ap_const_lv1_0 = brmerge_i_fu_335_p2))) then 
                p_Val2_s_phi_fu_237_p4 <= axi_data_V_1_i_phi_fu_190_p4;
            elsif ((ap_const_lv1_0 = brmerge_i_fu_335_p2)) then 
                p_Val2_s_phi_fu_237_p4 <= video_in_TDATA;
            else 
                p_Val2_s_phi_fu_237_p4 <= ap_reg_phiprechg_p_Val2_s_reg_233pp1_it0;
            end if;
        else 
            p_Val2_s_phi_fu_237_p4 <= ap_reg_phiprechg_p_Val2_s_reg_233pp1_it0;
        end if; 
    end process;

    tmp_fu_354_p1 <= p_Val2_s_phi_fu_237_p4(8 - 1 downto 0);
    tmp_user_V_fu_301_p1 <= video_in_TUSER;

    -- video_in_TREADY assign process. --
    video_in_TREADY_assign_proc : process(video_in_TVALID, ap_sig_cseq_ST_st2_fsm_1, exitcond2_i_fu_321_p2, ap_sig_cseq_ST_pp1_stg0_fsm_4, brmerge_i_fu_335_p2, ap_sig_bdd_130, ap_reg_ppiten_pp1_it0, ap_sig_bdd_143, ap_reg_ppiten_pp1_it1, ap_sig_cseq_ST_st7_fsm_5, ap_sig_bdd_173, eol_3_i_reg_280)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1) and not((video_in_TVALID = ap_const_logic_0))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_5) and (ap_const_lv1_0 = eol_3_i_reg_280) and not(ap_sig_bdd_173)) or ((ap_const_logic_1 = ap_sig_cseq_ST_pp1_stg0_fsm_4) and (exitcond2_i_fu_321_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = brmerge_i_fu_335_p2) and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0) and not(((ap_sig_bdd_130 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it0)) or (ap_sig_bdd_143 and (ap_const_logic_1 = ap_reg_ppiten_pp1_it1))))))) then 
            video_in_TREADY <= ap_const_logic_1;
        else 
            video_in_TREADY <= ap_const_logic_0;
        end if; 
    end process;

end behav;
