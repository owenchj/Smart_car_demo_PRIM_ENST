// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.2
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sobel_sobel_filter_core (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        src_data_stream_0_V_dout,
        src_data_stream_0_V_empty_n,
        src_data_stream_0_V_read,
        src_data_stream_1_V_dout,
        src_data_stream_1_V_empty_n,
        src_data_stream_1_V_read,
        src_data_stream_2_V_dout,
        src_data_stream_2_V_empty_n,
        src_data_stream_2_V_read,
        dst_data_stream_V_din,
        dst_data_stream_V_full_n,
        dst_data_stream_V_write,
        rows_dout,
        rows_empty_n,
        rows_read,
        cols_dout,
        cols_empty_n,
        cols_read,
        C_XR0C0_dout,
        C_XR0C0_empty_n,
        C_XR0C0_read,
        C_XR0C1_dout,
        C_XR0C1_empty_n,
        C_XR0C1_read,
        C_XR0C2_dout,
        C_XR0C2_empty_n,
        C_XR0C2_read,
        C_XR1C0_dout,
        C_XR1C0_empty_n,
        C_XR1C0_read,
        C_XR1C1_dout,
        C_XR1C1_empty_n,
        C_XR1C1_read,
        C_XR1C2_dout,
        C_XR1C2_empty_n,
        C_XR1C2_read,
        C_XR2C0_dout,
        C_XR2C0_empty_n,
        C_XR2C0_read,
        C_XR2C1_dout,
        C_XR2C1_empty_n,
        C_XR2C1_read,
        C_XR2C2_dout,
        C_XR2C2_empty_n,
        C_XR2C2_read,
        C_YR0C0_dout,
        C_YR0C0_empty_n,
        C_YR0C0_read,
        C_YR0C1_dout,
        C_YR0C1_empty_n,
        C_YR0C1_read,
        C_YR0C2_dout,
        C_YR0C2_empty_n,
        C_YR0C2_read,
        C_YR1C0_dout,
        C_YR1C0_empty_n,
        C_YR1C0_read,
        C_YR1C1_dout,
        C_YR1C1_empty_n,
        C_YR1C1_read,
        C_YR1C2_dout,
        C_YR1C2_empty_n,
        C_YR1C2_read,
        C_YR2C0_dout,
        C_YR2C0_empty_n,
        C_YR2C0_read,
        C_YR2C1_dout,
        C_YR2C1_empty_n,
        C_YR2C1_read,
        c_high_thresh_dout,
        c_high_thresh_empty_n,
        c_high_thresh_read,
        c_low_thresh_dout,
        c_low_thresh_empty_n,
        c_low_thresh_read,
        c_invert_dout,
        c_invert_empty_n,
        c_invert_read
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 4'b1;
parameter    ap_ST_st2_fsm_1 = 4'b10;
parameter    ap_ST_pp0_stg0_fsm_2 = 4'b100;
parameter    ap_ST_st8_fsm_3 = 4'b1000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv10_3FF = 10'b1111111111;
parameter    ap_const_lv11_7FF = 11'b11111111111;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv6_0 = 6'b000000;
parameter    ap_const_lv7_0 = 7'b0000000;
parameter    ap_const_lv10_80 = 10'b10000000;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv8_10 = 8'b10000;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_const_lv16_FF = 16'b11111111;
parameter    ap_const_lv8_FF = 8'b11111111;
parameter    ap_const_lv8_0 = 8'b00000000;
parameter    ap_const_lv13_19 = 13'b11001;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] src_data_stream_0_V_dout;
input   src_data_stream_0_V_empty_n;
output   src_data_stream_0_V_read;
input  [7:0] src_data_stream_1_V_dout;
input   src_data_stream_1_V_empty_n;
output   src_data_stream_1_V_read;
input  [7:0] src_data_stream_2_V_dout;
input   src_data_stream_2_V_empty_n;
output   src_data_stream_2_V_read;
output  [7:0] dst_data_stream_V_din;
input   dst_data_stream_V_full_n;
output   dst_data_stream_V_write;
input  [8:0] rows_dout;
input   rows_empty_n;
output   rows_read;
input  [9:0] cols_dout;
input   cols_empty_n;
output   cols_read;
input  [31:0] C_XR0C0_dout;
input   C_XR0C0_empty_n;
output   C_XR0C0_read;
input  [31:0] C_XR0C1_dout;
input   C_XR0C1_empty_n;
output   C_XR0C1_read;
input  [31:0] C_XR0C2_dout;
input   C_XR0C2_empty_n;
output   C_XR0C2_read;
input  [31:0] C_XR1C0_dout;
input   C_XR1C0_empty_n;
output   C_XR1C0_read;
input  [31:0] C_XR1C1_dout;
input   C_XR1C1_empty_n;
output   C_XR1C1_read;
input  [31:0] C_XR1C2_dout;
input   C_XR1C2_empty_n;
output   C_XR1C2_read;
input  [31:0] C_XR2C0_dout;
input   C_XR2C0_empty_n;
output   C_XR2C0_read;
input  [31:0] C_XR2C1_dout;
input   C_XR2C1_empty_n;
output   C_XR2C1_read;
input  [31:0] C_XR2C2_dout;
input   C_XR2C2_empty_n;
output   C_XR2C2_read;
input  [31:0] C_YR0C0_dout;
input   C_YR0C0_empty_n;
output   C_YR0C0_read;
input  [31:0] C_YR0C1_dout;
input   C_YR0C1_empty_n;
output   C_YR0C1_read;
input  [31:0] C_YR0C2_dout;
input   C_YR0C2_empty_n;
output   C_YR0C2_read;
input  [31:0] C_YR1C0_dout;
input   C_YR1C0_empty_n;
output   C_YR1C0_read;
input  [31:0] C_YR1C1_dout;
input   C_YR1C1_empty_n;
output   C_YR1C1_read;
input  [31:0] C_YR1C2_dout;
input   C_YR1C2_empty_n;
output   C_YR1C2_read;
input  [31:0] C_YR2C0_dout;
input   C_YR2C0_empty_n;
output   C_YR2C0_read;
input  [31:0] C_YR2C1_dout;
input   C_YR2C1_empty_n;
output   C_YR2C1_read;
input  [31:0] c_high_thresh_dout;
input   c_high_thresh_empty_n;
output   c_high_thresh_read;
input  [31:0] c_low_thresh_dout;
input   c_low_thresh_empty_n;
output   c_low_thresh_read;
input  [31:0] c_invert_dout;
input   c_invert_empty_n;
output   c_invert_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src_data_stream_0_V_read;
reg src_data_stream_1_V_read;
reg src_data_stream_2_V_read;
reg dst_data_stream_V_write;
reg rows_read;
reg cols_read;
reg C_XR0C0_read;
reg C_XR0C1_read;
reg C_XR0C2_read;
reg C_XR1C0_read;
reg C_XR1C1_read;
reg C_XR1C2_read;
reg C_XR2C0_read;
reg C_XR2C1_read;
reg C_XR2C2_read;
reg C_YR0C0_read;
reg C_YR0C1_read;
reg C_YR0C2_read;
reg C_YR1C0_read;
reg C_YR1C1_read;
reg C_YR1C2_read;
reg C_YR2C0_read;
reg C_YR2C1_read;
reg c_high_thresh_read;
reg c_low_thresh_read;
reg c_invert_read;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm = 4'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_23;
reg   [10:0] col_assign_reg_438;
reg   [10:0] ap_reg_ppstg_col_assign_reg_438_pp0_it1;
reg    ap_sig_cseq_ST_pp0_stg0_fsm_2;
reg    ap_sig_bdd_142;
reg    ap_reg_ppiten_pp0_it0 = 1'b0;
reg    ap_reg_ppiten_pp0_it1 = 1'b0;
reg   [0:0] exitcond_reg_1600;
reg   [0:0] ap_reg_ppstg_exitcond_reg_1600_pp0_it1;
reg   [0:0] or_cond_i_reg_1632;
reg   [0:0] ap_reg_ppstg_or_cond_i_reg_1632_pp0_it1;
reg    ap_sig_bdd_165;
reg    ap_reg_ppiten_pp0_it2 = 1'b0;
reg    ap_reg_ppiten_pp0_it3 = 1'b0;
reg   [0:0] or_cond3_i_reg_1641;
reg   [0:0] ap_reg_ppstg_or_cond3_i_reg_1641_pp0_it3;
reg    ap_sig_bdd_177;
reg    ap_reg_ppiten_pp0_it4 = 1'b0;
reg   [31:0] c_high_thresh_read_reg_1441;
reg    ap_sig_bdd_233;
reg   [31:0] c_low_thresh_read_reg_1446;
wire   [9:0] rows_cast_i_cast_fu_450_p1;
reg   [9:0] rows_cast_i_cast_reg_1451;
wire  signed [10:0] tmp_24_i_cast_fu_460_p1;
reg  signed [10:0] tmp_24_i_cast_reg_1456;
wire   [10:0] cols_cast_i_cast_fu_464_p1;
reg   [10:0] cols_cast_i_cast_reg_1461;
wire  signed [11:0] tmp_25_i_cast_fu_474_p1;
reg  signed [11:0] tmp_25_i_cast_reg_1466;
wire   [10:0] tmp_s_fu_478_p2;
reg   [10:0] tmp_s_reg_1471;
wire   [9:0] tmp_58_fu_484_p2;
reg   [9:0] tmp_58_reg_1476;
wire  signed [15:0] tmp_36_0_i_i_fu_558_p1;
reg  signed [15:0] tmp_36_0_i_i_reg_1481;
wire  signed [15:0] tmp_38_0_i_i_fu_562_p1;
reg  signed [15:0] tmp_38_0_i_i_reg_1486;
wire  signed [15:0] tmp_36_0_1_i_i_fu_566_p1;
reg  signed [15:0] tmp_36_0_1_i_i_reg_1491;
wire  signed [15:0] tmp_38_0_1_i_i_fu_570_p1;
reg  signed [15:0] tmp_38_0_1_i_i_reg_1496;
wire  signed [15:0] tmp_36_0_2_i_i_fu_574_p1;
reg  signed [15:0] tmp_36_0_2_i_i_reg_1501;
wire  signed [15:0] tmp_38_0_2_i_i_fu_578_p1;
reg  signed [15:0] tmp_38_0_2_i_i_reg_1506;
wire  signed [15:0] tmp_36_1_i_i_fu_582_p1;
reg  signed [15:0] tmp_36_1_i_i_reg_1511;
wire  signed [15:0] tmp_38_1_i_i_fu_586_p1;
reg  signed [15:0] tmp_38_1_i_i_reg_1516;
wire  signed [15:0] tmp_36_1_1_i_i_fu_590_p1;
reg  signed [15:0] tmp_36_1_1_i_i_reg_1521;
wire  signed [15:0] tmp_38_1_1_i_i_fu_594_p1;
reg  signed [15:0] tmp_38_1_1_i_i_reg_1526;
wire  signed [15:0] tmp_36_1_2_i_i_fu_598_p1;
reg  signed [15:0] tmp_36_1_2_i_i_reg_1531;
wire  signed [15:0] tmp_38_1_2_i_i_fu_602_p1;
reg  signed [15:0] tmp_38_1_2_i_i_reg_1536;
wire  signed [15:0] tmp_36_2_i_i_fu_606_p1;
reg  signed [15:0] tmp_36_2_i_i_reg_1541;
wire  signed [15:0] tmp_38_2_i_i_fu_610_p1;
reg  signed [15:0] tmp_38_2_i_i_reg_1546;
wire  signed [15:0] tmp_36_2_1_i_i_fu_614_p1;
reg  signed [15:0] tmp_36_2_1_i_i_reg_1551;
wire  signed [15:0] tmp_38_2_1_i_i_fu_618_p1;
reg  signed [15:0] tmp_38_2_1_i_i_reg_1556;
wire  signed [15:0] tmp_36_2_2_i_i_fu_622_p1;
reg  signed [15:0] tmp_36_2_2_i_i_reg_1561;
wire   [0:0] tmp_29_i_i_fu_626_p2;
reg   [0:0] tmp_29_i_i_reg_1566;
wire   [0:0] exitcond1_fu_636_p2;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_293;
wire   [9:0] row_fu_641_p2;
reg   [9:0] row_reg_1575;
wire   [0:0] tmp_27_i_fu_647_p2;
reg   [0:0] tmp_27_i_reg_1580;
wire   [0:0] icmp_fu_662_p2;
reg   [0:0] icmp_reg_1585;
wire   [0:0] tmp_29_i_fu_668_p2;
reg   [0:0] tmp_29_i_reg_1590;
wire   [0:0] tmp_30_i_fu_674_p2;
reg   [0:0] tmp_30_i_reg_1595;
wire   [0:0] exitcond_fu_683_p2;
reg   [0:0] ap_reg_ppstg_exitcond_reg_1600_pp0_it2;
wire   [10:0] col_fu_688_p2;
reg   [10:0] col_reg_1604;
wire   [0:0] tmp_32_i_fu_694_p2;
reg   [0:0] tmp_32_i_reg_1609;
reg   [0:0] ap_reg_ppstg_tmp_32_i_reg_1609_pp0_it1;
reg   [0:0] ap_reg_ppstg_tmp_32_i_reg_1609_pp0_it2;
wire   [63:0] tmp_33_i_fu_699_p1;
reg   [63:0] tmp_33_i_reg_1616;
reg   [9:0] buff_A_val_1_addr_reg_1621;
wire   [0:0] or_cond_i_fu_705_p2;
wire   [0:0] or_cond4_i_fu_741_p2;
reg   [0:0] or_cond4_i_reg_1636;
reg   [0:0] ap_reg_ppstg_or_cond4_i_reg_1636_pp0_it1;
reg   [0:0] ap_reg_ppstg_or_cond4_i_reg_1636_pp0_it2;
reg   [0:0] ap_reg_ppstg_or_cond4_i_reg_1636_pp0_it3;
wire   [0:0] or_cond3_i_fu_753_p2;
reg   [0:0] ap_reg_ppstg_or_cond3_i_reg_1641_pp0_it1;
reg   [0:0] ap_reg_ppstg_or_cond3_i_reg_1641_pp0_it2;
reg   [7:0] buff_C_val_1_0_1_load_reg_1645;
wire   [7:0] edge_val_2_i_i_fu_1220_p3;
reg   [7:0] edge_val_2_i_i_reg_1655;
wire   [9:0] buff_A_val_0_address0;
reg    buff_A_val_0_ce0;
wire   [7:0] buff_A_val_0_q0;
wire   [9:0] buff_A_val_0_address1;
reg    buff_A_val_0_ce1;
reg    buff_A_val_0_we1;
wire   [7:0] buff_A_val_0_d1;
wire   [9:0] buff_A_val_1_address0;
reg    buff_A_val_1_ce0;
wire   [7:0] buff_A_val_1_q0;
wire   [9:0] buff_A_val_1_address1;
reg    buff_A_val_1_ce1;
reg    buff_A_val_1_we1;
wire   [7:0] buff_A_val_1_d1;
wire   [9:0] buff_A_val_2_address0;
reg    buff_A_val_2_ce0;
reg    buff_A_val_2_we0;
wire   [7:0] buff_A_val_2_d0;
wire   [9:0] buff_A_val_2_address1;
reg    buff_A_val_2_ce1;
wire   [7:0] buff_A_val_2_q1;
reg   [9:0] row_i_reg_427;
reg    ap_sig_cseq_ST_st8_fsm_3;
reg    ap_sig_bdd_407;
reg   [10:0] col_assign_phi_fu_442_p4;
wire   [63:0] tmp_34_i_fu_859_p1;
wire   [63:0] tmp_35_i_fu_882_p1;
reg   [7:0] buff_C_val_1_0_1_fu_160;
reg   [7:0] tmp_fu_164;
reg   [7:0] tmp_84_fu_168;
reg   [7:0] buff_C_val_0_0_i_fu_172;
wire   [7:0] buff_C_val_0_0_fu_1022_p3;
reg   [7:0] buff_C_val_0_1_i_fu_176;
reg   [7:0] tmp_85_fu_180;
reg   [7:0] buff_C_val_1_0_i_fu_184;
wire   [7:0] buff_C_val_1_0_fu_1016_p3;
reg   [7:0] buff_C_val_1_1_i_fu_188;
reg   [7:0] buff_C_val_2_1_i_fu_192;
reg   [7:0] buff_C_val_2_0_i_fu_196;
wire   [7:0] buff_C_val_2_0_fu_1009_p3;
wire  signed [9:0] tmp_24_i_fu_454_p2;
wire  signed [10:0] tmp_25_i_fu_468_p2;
wire   [7:0] tmp_86_fu_490_p1;
wire   [7:0] tmp_95_fu_526_p1;
wire   [7:0] tmp_87_fu_494_p1;
wire   [7:0] tmp_96_fu_530_p1;
wire   [7:0] tmp_88_fu_498_p1;
wire   [7:0] tmp_97_fu_534_p1;
wire   [7:0] tmp_89_fu_502_p1;
wire   [7:0] tmp_98_fu_538_p1;
wire   [7:0] tmp_90_fu_506_p1;
wire   [7:0] tmp_99_fu_542_p1;
wire   [7:0] tmp_91_fu_510_p1;
wire   [7:0] tmp_100_fu_546_p1;
wire   [7:0] tmp_92_fu_514_p1;
wire   [7:0] tmp_101_fu_550_p1;
wire   [7:0] tmp_93_fu_518_p1;
wire   [7:0] tmp_102_fu_554_p1;
wire   [7:0] tmp_94_fu_522_p1;
wire   [8:0] tmp_103_fu_652_p4;
wire   [10:0] row_cast_cast_i_fu_632_p1;
wire   [9:0] tmp_107_fu_710_p4;
wire   [11:0] col_assign_cast_cast_i_fu_679_p1;
wire   [0:0] icmp2_fu_720_p2;
wire   [0:0] tmp_37_i_fu_726_p2;
wire   [0:0] tmp9_fu_736_p2;
wire   [0:0] tmp8_fu_731_p2;
wire   [0:0] tmp_38_i_fu_747_p2;
wire   [13:0] p_shl1_i_i_fu_763_p3;
wire   [8:0] p_shl2_i_i_fu_775_p3;
wire   [14:0] p_shl_i_i_fu_791_p3;
wire   [9:0] p_shl2_i_cast_i_cast_fu_783_p1;
wire   [9:0] tmp2_fu_807_p2;
wire   [14:0] p_shl1_i_cast_i_fu_771_p1;
wire   [14:0] tmp2_cast_fu_813_p1;
wire   [14:0] tmp_6_i_i_fu_817_p2;
wire   [15:0] tmp_6_i_cast_i_fu_823_p1;
wire   [15:0] p_shl_i_cast_i_fu_799_p1;
wire   [12:0] grp_fu_1331_p3;
wire   [15:0] tmp3_fu_827_p2;
wire   [15:0] tmp4_cast_fu_833_p1;
wire   [15:0] tmp_8_i_i_fu_836_p2;
wire   [7:0] tmp_i_i_fu_842_p4;
wire   [13:0] p_shl1_i36_i_fu_914_p3;
wire   [8:0] p_shl2_i37_i_fu_926_p3;
wire   [14:0] p_shl_i40_i_fu_942_p3;
wire   [9:0] p_shl2_i37_cast_i_cast_fu_934_p1;
wire   [9:0] tmp5_fu_958_p2;
wire   [14:0] tmp5_cast_fu_964_p1;
wire   [14:0] p_shl1_i36_cast_i_fu_922_p1;
wire   [14:0] tmp_6_i44_i_fu_968_p2;
wire   [15:0] p_shl_i40_cast_i_fu_950_p1;
wire   [15:0] tmp_6_i44_cast_i_fu_974_p1;
wire   [12:0] grp_fu_1322_p3;
wire   [15:0] tmp7_cast_fu_984_p1;
wire   [15:0] tmp6_fu_978_p2;
wire   [15:0] tmp_8_i46_i_fu_987_p2;
wire   [7:0] tmp_i48_i_fu_993_p4;
wire   [7:0] y_2_fu_1003_p2;
wire   [7:0] tmp_37_0_1_i_i_fu_1037_p0;
wire   [15:0] tmp_35_0_1_i_i_fu_1033_p1;
wire  signed [7:0] tmp_37_0_1_i_i_fu_1037_p1;
wire   [7:0] tmp_39_0_1_i_i_fu_1042_p0;
wire  signed [7:0] tmp_39_0_1_i_i_fu_1042_p1;
wire   [7:0] tmp_37_1_2_i_i_fu_1063_p0;
wire   [15:0] tmp_35_1_2_i_i_fu_1059_p1;
wire  signed [7:0] tmp_37_1_2_i_i_fu_1063_p1;
wire   [7:0] tmp_39_1_2_i_i_fu_1068_p0;
wire  signed [7:0] tmp_39_1_2_i_i_fu_1068_p1;
wire   [7:0] tmp_37_2_i_i_fu_1077_p0;
wire   [15:0] tmp_35_2_i_i_fu_1073_p1;
wire  signed [7:0] tmp_37_2_i_i_fu_1077_p1;
wire   [7:0] tmp_39_2_i_i_fu_1082_p0;
wire  signed [7:0] tmp_39_2_i_i_fu_1082_p1;
wire   [7:0] tmp_37_2_2_i_i_fu_1095_p0;
wire  signed [7:0] tmp_37_2_2_i_i_fu_1095_p1;
wire  signed [15:0] grp_fu_1306_p3;
wire  signed [15:0] grp_fu_1363_p3;
wire  signed [15:0] grp_fu_1291_p3;
wire  signed [15:0] grp_fu_1340_p3;
(* use_dsp48 = "no" *) wire  signed [15:0] tmp25_fu_1104_p2;
(* use_dsp48 = "no" *) wire  signed [15:0] tmp22_fu_1100_p2;
wire  signed [15:0] grp_fu_1371_p3;
wire  signed [15:0] grp_fu_1283_p3;
wire  signed [15:0] grp_fu_1348_p3;
wire  signed [15:0] grp_fu_1314_p3;
(* use_dsp48 = "no" *) wire  signed [15:0] tmp32_fu_1118_p2;
(* use_dsp48 = "no" *) wire  signed [15:0] tmp29_fu_1114_p2;
wire  signed [15:0] x_weight_2_2_2_i_i_fu_1108_p2;
wire   [0:0] tmp_17_i_i_fu_1128_p2;
wire  signed [15:0] tmp_18_i_i_fu_1134_p2;
wire  signed [15:0] y_weight_2_2_2_i_i_fu_1122_p2;
wire   [0:0] tmp_20_i_i_fu_1148_p2;
wire  signed [15:0] tmp_21_i_i_fu_1154_p2;
wire   [15:0] tmp_19_i_i_fu_1140_p3;
wire   [15:0] tmp_22_i_i_fu_1160_p3;
wire   [15:0] edge_weight_fu_1168_p2;
wire   [7:0] tmp_108_fu_1180_p1;
wire   [0:0] tmp_23_i_i_fu_1174_p2;
wire   [7:0] edge_val_fu_1184_p2;
wire   [7:0] edge_val1_i_i_fu_1190_p3;
wire   [31:0] tmp_26_i_i_fu_1198_p1;
wire   [0:0] tmp_28_i_i_fu_1207_p2;
wire   [0:0] tmp_27_i_i_fu_1202_p2;
wire   [7:0] p_edge_val_i_i_fu_1212_p3;
wire   [7:0] edge_val_1_fu_1264_p2;
wire   [7:0] edge_val_2_fu_1269_p3;
wire   [7:0] grp_fu_1283_p0;
wire   [15:0] tmp_35_2_1_i_i_fu_1087_p1;
wire  signed [7:0] grp_fu_1283_p1;
wire  signed [15:0] grp_fu_1283_p2;
wire   [7:0] grp_fu_1291_p0;
wire   [15:0] tmp_35_1_i_i_fu_1051_p1;
wire  signed [7:0] grp_fu_1291_p1;
wire  signed [15:0] grp_fu_1291_p2;
wire  signed [15:0] grp_fu_1298_p3;
wire   [7:0] grp_fu_1298_p0;
wire   [15:0] tmp_35_0_2_i_i_fu_1047_p1;
wire  signed [7:0] grp_fu_1298_p1;
wire  signed [15:0] grp_fu_1298_p2;
wire  signed [15:0] tmp_37_2_2_i_i_fu_1095_p2;
wire   [7:0] grp_fu_1306_p0;
wire   [15:0] tmp_35_1_1_i_i_fu_1055_p1;
wire  signed [7:0] grp_fu_1306_p1;
wire  signed [15:0] grp_fu_1306_p2;
wire   [7:0] grp_fu_1314_p0;
wire   [15:0] tmp_35_0_i_i_fu_1029_p1;
wire  signed [7:0] grp_fu_1314_p1;
wire  signed [15:0] grp_fu_1314_p2;
wire   [5:0] grp_fu_1322_p0;
wire   [7:0] grp_fu_1322_p1;
wire   [7:0] grp_fu_1322_p2;
wire   [7:0] grp_fu_1331_p0;
wire   [5:0] grp_fu_1331_p1;
wire   [7:0] grp_fu_1331_p2;
wire   [7:0] grp_fu_1340_p0;
wire  signed [7:0] grp_fu_1340_p1;
wire  signed [15:0] grp_fu_1340_p2;
wire   [7:0] grp_fu_1348_p0;
wire  signed [7:0] grp_fu_1348_p1;
wire  signed [15:0] grp_fu_1348_p2;
wire  signed [15:0] grp_fu_1355_p3;
wire   [7:0] grp_fu_1355_p0;
wire  signed [7:0] grp_fu_1355_p1;
wire  signed [15:0] grp_fu_1355_p2;
wire   [7:0] grp_fu_1363_p0;
wire  signed [7:0] grp_fu_1363_p1;
wire  signed [15:0] grp_fu_1363_p2;
wire   [7:0] grp_fu_1371_p0;
wire  signed [7:0] grp_fu_1371_p1;
wire  signed [15:0] grp_fu_1371_p2;
reg   [3:0] ap_NS_fsm;
wire   [12:0] grp_fu_1322_p10;
wire   [12:0] grp_fu_1322_p20;
wire   [12:0] grp_fu_1331_p00;
wire   [12:0] grp_fu_1331_p20;
wire   [15:0] tmp_37_2_2_i_i_fu_1095_p00;


sobel_Filter2D_k_buf_0_val_0 #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
buff_A_val_0_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( buff_A_val_0_address0 ),
    .ce0( buff_A_val_0_ce0 ),
    .q0( buff_A_val_0_q0 ),
    .address1( buff_A_val_0_address1 ),
    .ce1( buff_A_val_0_ce1 ),
    .we1( buff_A_val_0_we1 ),
    .d1( buff_A_val_0_d1 )
);

sobel_Filter2D_k_buf_0_val_0 #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
buff_A_val_1_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( buff_A_val_1_address0 ),
    .ce0( buff_A_val_1_ce0 ),
    .q0( buff_A_val_1_q0 ),
    .address1( buff_A_val_1_address1 ),
    .ce1( buff_A_val_1_ce1 ),
    .we1( buff_A_val_1_we1 ),
    .d1( buff_A_val_1_d1 )
);

sobel_sobel_filter_core_buff_A_val_2 #(
    .DataWidth( 8 ),
    .AddressRange( 640 ),
    .AddressWidth( 10 ))
buff_A_val_2_U(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .address0( buff_A_val_2_address0 ),
    .ce0( buff_A_val_2_ce0 ),
    .we0( buff_A_val_2_we0 ),
    .d0( buff_A_val_2_d0 ),
    .address1( buff_A_val_2_address1 ),
    .ce1( buff_A_val_2_ce1 ),
    .q1( buff_A_val_2_q1 )
);

sobel_mac_muladd_8ns_8s_16s_16_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
sobel_mac_muladd_8ns_8s_16s_16_1_U108(
    .din0( grp_fu_1283_p0 ),
    .din1( grp_fu_1283_p1 ),
    .din2( grp_fu_1283_p2 ),
    .dout( grp_fu_1283_p3 )
);

sobel_mac_muladd_8ns_8s_16s_16_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
sobel_mac_muladd_8ns_8s_16s_16_1_U109(
    .din0( grp_fu_1291_p0 ),
    .din1( grp_fu_1291_p1 ),
    .din2( grp_fu_1291_p2 ),
    .dout( grp_fu_1291_p3 )
);

sobel_mac_muladd_8ns_8s_16s_16_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
sobel_mac_muladd_8ns_8s_16s_16_1_U110(
    .din0( grp_fu_1298_p0 ),
    .din1( grp_fu_1298_p1 ),
    .din2( grp_fu_1298_p2 ),
    .dout( grp_fu_1298_p3 )
);

sobel_mac_muladd_8ns_8s_16s_16_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
sobel_mac_muladd_8ns_8s_16s_16_1_U111(
    .din0( grp_fu_1306_p0 ),
    .din1( grp_fu_1306_p1 ),
    .din2( grp_fu_1306_p2 ),
    .dout( grp_fu_1306_p3 )
);

sobel_mac_muladd_8ns_8s_16s_16_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
sobel_mac_muladd_8ns_8s_16s_16_1_U112(
    .din0( grp_fu_1314_p0 ),
    .din1( grp_fu_1314_p1 ),
    .din2( grp_fu_1314_p2 ),
    .dout( grp_fu_1314_p3 )
);

sobel_mac_muladd_6ns_8ns_8ns_13_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 13 ))
sobel_mac_muladd_6ns_8ns_8ns_13_1_U113(
    .din0( grp_fu_1322_p0 ),
    .din1( grp_fu_1322_p1 ),
    .din2( grp_fu_1322_p2 ),
    .dout( grp_fu_1322_p3 )
);

sobel_mac_muladd_8ns_6ns_8ns_13_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 6 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 13 ))
sobel_mac_muladd_8ns_6ns_8ns_13_1_U114(
    .din0( grp_fu_1331_p0 ),
    .din1( grp_fu_1331_p1 ),
    .din2( grp_fu_1331_p2 ),
    .dout( grp_fu_1331_p3 )
);

sobel_mac_muladd_8ns_8s_16s_16_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
sobel_mac_muladd_8ns_8s_16s_16_1_U115(
    .din0( grp_fu_1340_p0 ),
    .din1( grp_fu_1340_p1 ),
    .din2( grp_fu_1340_p2 ),
    .dout( grp_fu_1340_p3 )
);

sobel_mac_muladd_8ns_8s_16s_16_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
sobel_mac_muladd_8ns_8s_16s_16_1_U116(
    .din0( grp_fu_1348_p0 ),
    .din1( grp_fu_1348_p1 ),
    .din2( grp_fu_1348_p2 ),
    .dout( grp_fu_1348_p3 )
);

sobel_mac_muladd_8ns_8s_16s_16_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
sobel_mac_muladd_8ns_8s_16s_16_1_U117(
    .din0( grp_fu_1355_p0 ),
    .din1( grp_fu_1355_p1 ),
    .din2( grp_fu_1355_p2 ),
    .dout( grp_fu_1355_p3 )
);

sobel_mac_muladd_8ns_8s_16s_16_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
sobel_mac_muladd_8ns_8s_16s_16_1_U118(
    .din0( grp_fu_1363_p0 ),
    .din1( grp_fu_1363_p1 ),
    .din2( grp_fu_1363_p2 ),
    .dout( grp_fu_1363_p3 )
);

sobel_mac_muladd_8ns_8s_16s_16_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
sobel_mac_muladd_8ns_8s_16s_16_1_U119(
    .din0( grp_fu_1371_p0 ),
    .din1( grp_fu_1371_p1 ),
    .din2( grp_fu_1371_p2 ),
    .dout( grp_fu_1371_p3 )
);



/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond1_fu_636_p2))) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))) & ~(ap_const_lv1_0 == exitcond_fu_683_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond1_fu_636_p2))) begin
            ap_reg_ppiten_pp0_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp0_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))))) begin
            ap_reg_ppiten_pp0_it1 <= ap_reg_ppiten_pp0_it0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond1_fu_636_p2))) begin
            ap_reg_ppiten_pp0_it1 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it2 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it2
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it2 <= ap_const_logic_0;
    end else begin
        if (~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4)))) begin
            ap_reg_ppiten_pp0_it2 <= ap_reg_ppiten_pp0_it1;
        end
    end
end

/// ap_reg_ppiten_pp0_it3 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it3
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
    end else begin
        if (~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4)))) begin
            ap_reg_ppiten_pp0_it3 <= ap_reg_ppiten_pp0_it2;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond1_fu_636_p2))) begin
            ap_reg_ppiten_pp0_it3 <= ap_const_logic_0;
        end
    end
end

/// ap_reg_ppiten_pp0_it4 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp0_it4
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))))) begin
            ap_reg_ppiten_pp0_it4 <= ap_reg_ppiten_pp0_it3;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond1_fu_636_p2)) | (~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it2)))) begin
            ap_reg_ppiten_pp0_it4 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))) & (exitcond_reg_1600 == ap_const_lv1_0))) begin
        col_assign_reg_438 <= col_reg_1604;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond1_fu_636_p2))) begin
        col_assign_reg_438 <= ap_const_lv11_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_3)) begin
        row_i_reg_427 <= row_reg_1575;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_233)) begin
        row_i_reg_427 <= ap_const_lv10_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))))) begin
        ap_reg_ppstg_col_assign_reg_438_pp0_it1 <= col_assign_reg_438;
        ap_reg_ppstg_exitcond_reg_1600_pp0_it1 <= exitcond_reg_1600;
        ap_reg_ppstg_or_cond3_i_reg_1641_pp0_it1 <= or_cond3_i_reg_1641;
        ap_reg_ppstg_or_cond4_i_reg_1636_pp0_it1 <= or_cond4_i_reg_1636;
        ap_reg_ppstg_or_cond_i_reg_1632_pp0_it1 <= or_cond_i_reg_1632;
        ap_reg_ppstg_tmp_32_i_reg_1609_pp0_it1 <= tmp_32_i_reg_1609;
        exitcond_reg_1600 <= exitcond_fu_683_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4)))) begin
        ap_reg_ppstg_exitcond_reg_1600_pp0_it2 <= ap_reg_ppstg_exitcond_reg_1600_pp0_it1;
        ap_reg_ppstg_or_cond3_i_reg_1641_pp0_it2 <= ap_reg_ppstg_or_cond3_i_reg_1641_pp0_it1;
        ap_reg_ppstg_or_cond3_i_reg_1641_pp0_it3 <= ap_reg_ppstg_or_cond3_i_reg_1641_pp0_it2;
        ap_reg_ppstg_or_cond4_i_reg_1636_pp0_it2 <= ap_reg_ppstg_or_cond4_i_reg_1636_pp0_it1;
        ap_reg_ppstg_or_cond4_i_reg_1636_pp0_it3 <= ap_reg_ppstg_or_cond4_i_reg_1636_pp0_it2;
        ap_reg_ppstg_tmp_32_i_reg_1609_pp0_it2 <= ap_reg_ppstg_tmp_32_i_reg_1609_pp0_it1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))) & (ap_const_lv1_0 == exitcond_fu_683_p2) & ~(ap_const_lv1_0 == tmp_32_i_fu_694_p2))) begin
        buff_A_val_1_addr_reg_1621 <= tmp_33_i_fu_699_p1;
        tmp_33_i_reg_1616[10 : 0] <= tmp_33_i_fu_699_p1[10 : 0];
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1600_pp0_it2))) begin
        buff_C_val_0_0_i_fu_172 <= buff_C_val_0_0_fu_1022_p3;
        buff_C_val_0_1_i_fu_176 <= buff_C_val_0_0_i_fu_172;
        buff_C_val_1_0_i_fu_184 <= buff_C_val_1_0_fu_1016_p3;
        buff_C_val_1_1_i_fu_188 <= buff_C_val_1_0_i_fu_184;
        buff_C_val_2_0_i_fu_196 <= buff_C_val_2_0_fu_1009_p3;
        buff_C_val_2_1_i_fu_192 <= buff_C_val_2_0_i_fu_196;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))) & (exitcond_reg_1600 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_32_i_reg_1609))) begin
        buff_C_val_1_0_1_fu_160 <= buff_A_val_0_q0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_reg_ppstg_exitcond_reg_1600_pp0_it1 == ap_const_lv1_0) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))) & ~(ap_const_lv1_0 == ap_reg_ppstg_tmp_32_i_reg_1609_pp0_it1))) begin
        buff_C_val_1_0_1_load_reg_1645 <= buff_C_val_1_0_1_fu_160;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_233)) begin
        c_high_thresh_read_reg_1441 <= c_high_thresh_dout;
        c_low_thresh_read_reg_1446 <= c_low_thresh_dout;
        cols_cast_i_cast_reg_1461[9 : 0] <= cols_cast_i_cast_fu_464_p1[9 : 0];
        rows_cast_i_cast_reg_1451[8 : 0] <= rows_cast_i_cast_fu_450_p1[8 : 0];
        tmp_24_i_cast_reg_1456 <= tmp_24_i_cast_fu_460_p1;
        tmp_25_i_cast_reg_1466 <= tmp_25_i_cast_fu_474_p1;
        tmp_29_i_i_reg_1566 <= tmp_29_i_i_fu_626_p2;
        tmp_36_0_1_i_i_reg_1491 <= tmp_36_0_1_i_i_fu_566_p1;
        tmp_36_0_2_i_i_reg_1501 <= tmp_36_0_2_i_i_fu_574_p1;
        tmp_36_0_i_i_reg_1481 <= tmp_36_0_i_i_fu_558_p1;
        tmp_36_1_1_i_i_reg_1521 <= tmp_36_1_1_i_i_fu_590_p1;
        tmp_36_1_2_i_i_reg_1531 <= tmp_36_1_2_i_i_fu_598_p1;
        tmp_36_1_i_i_reg_1511 <= tmp_36_1_i_i_fu_582_p1;
        tmp_36_2_1_i_i_reg_1551 <= tmp_36_2_1_i_i_fu_614_p1;
        tmp_36_2_2_i_i_reg_1561 <= tmp_36_2_2_i_i_fu_622_p1;
        tmp_36_2_i_i_reg_1541 <= tmp_36_2_i_i_fu_606_p1;
        tmp_38_0_1_i_i_reg_1496 <= tmp_38_0_1_i_i_fu_570_p1;
        tmp_38_0_2_i_i_reg_1506 <= tmp_38_0_2_i_i_fu_578_p1;
        tmp_38_0_i_i_reg_1486 <= tmp_38_0_i_i_fu_562_p1;
        tmp_38_1_1_i_i_reg_1526 <= tmp_38_1_1_i_i_fu_594_p1;
        tmp_38_1_2_i_i_reg_1536 <= tmp_38_1_2_i_i_fu_602_p1;
        tmp_38_1_i_i_reg_1516 <= tmp_38_1_i_i_fu_586_p1;
        tmp_38_2_1_i_i_reg_1556 <= tmp_38_2_1_i_i_fu_618_p1;
        tmp_38_2_i_i_reg_1546 <= tmp_38_2_i_i_fu_610_p1;
        tmp_58_reg_1476 <= tmp_58_fu_484_p2;
        tmp_s_reg_1471 <= tmp_s_fu_478_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))))) begin
        col_reg_1604 <= col_fu_688_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))) & (ap_const_lv1_0 == ap_reg_ppstg_exitcond_reg_1600_pp0_it2) & (ap_const_lv1_0 == ap_reg_ppstg_or_cond4_i_reg_1636_pp0_it2))) begin
        edge_val_2_i_i_reg_1655 <= edge_val_2_i_i_fu_1220_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & (ap_const_lv1_0 == exitcond1_fu_636_p2))) begin
        icmp_reg_1585 <= icmp_fu_662_p2;
        tmp_27_i_reg_1580 <= tmp_27_i_fu_647_p2;
        tmp_29_i_reg_1590 <= tmp_29_i_fu_668_p2;
        tmp_30_i_reg_1595 <= tmp_30_i_fu_674_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))) & (ap_const_lv1_0 == exitcond_fu_683_p2))) begin
        or_cond3_i_reg_1641 <= or_cond3_i_fu_753_p2;
        or_cond4_i_reg_1636 <= or_cond4_i_fu_741_p2;
        or_cond_i_reg_1632 <= or_cond_i_fu_705_p2;
        tmp_32_i_reg_1609 <= tmp_32_i_fu_694_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        row_reg_1575 <= row_fu_641_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_reg_ppstg_exitcond_reg_1600_pp0_it1 == ap_const_lv1_0) & ~(ap_const_lv1_0 == ap_reg_ppstg_or_cond_i_reg_1632_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))))) begin
        tmp_84_fu_168 <= src_data_stream_1_V_dout;
        tmp_85_fu_180 <= src_data_stream_0_V_dout;
        tmp_fu_164 <= src_data_stream_2_V_dout;
    end
end

/// C_XR0C0_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_233)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_233)) begin
        C_XR0C0_read = ap_const_logic_1;
    end else begin
        C_XR0C0_read = ap_const_logic_0;
    end
end

/// C_XR0C1_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_233)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_233)) begin
        C_XR0C1_read = ap_const_logic_1;
    end else begin
        C_XR0C1_read = ap_const_logic_0;
    end
end

/// C_XR0C2_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_233)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_233)) begin
        C_XR0C2_read = ap_const_logic_1;
    end else begin
        C_XR0C2_read = ap_const_logic_0;
    end
end

/// C_XR1C0_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_233)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_233)) begin
        C_XR1C0_read = ap_const_logic_1;
    end else begin
        C_XR1C0_read = ap_const_logic_0;
    end
end

/// C_XR1C1_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_233)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_233)) begin
        C_XR1C1_read = ap_const_logic_1;
    end else begin
        C_XR1C1_read = ap_const_logic_0;
    end
end

/// C_XR1C2_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_233)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_233)) begin
        C_XR1C2_read = ap_const_logic_1;
    end else begin
        C_XR1C2_read = ap_const_logic_0;
    end
end

/// C_XR2C0_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_233)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_233)) begin
        C_XR2C0_read = ap_const_logic_1;
    end else begin
        C_XR2C0_read = ap_const_logic_0;
    end
end

/// C_XR2C1_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_233)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_233)) begin
        C_XR2C1_read = ap_const_logic_1;
    end else begin
        C_XR2C1_read = ap_const_logic_0;
    end
end

/// C_XR2C2_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_233)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_233)) begin
        C_XR2C2_read = ap_const_logic_1;
    end else begin
        C_XR2C2_read = ap_const_logic_0;
    end
end

/// C_YR0C0_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_233)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_233)) begin
        C_YR0C0_read = ap_const_logic_1;
    end else begin
        C_YR0C0_read = ap_const_logic_0;
    end
end

/// C_YR0C1_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_233)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_233)) begin
        C_YR0C1_read = ap_const_logic_1;
    end else begin
        C_YR0C1_read = ap_const_logic_0;
    end
end

/// C_YR0C2_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_233)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_233)) begin
        C_YR0C2_read = ap_const_logic_1;
    end else begin
        C_YR0C2_read = ap_const_logic_0;
    end
end

/// C_YR1C0_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_233)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_233)) begin
        C_YR1C0_read = ap_const_logic_1;
    end else begin
        C_YR1C0_read = ap_const_logic_0;
    end
end

/// C_YR1C1_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_233)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_233)) begin
        C_YR1C1_read = ap_const_logic_1;
    end else begin
        C_YR1C1_read = ap_const_logic_0;
    end
end

/// C_YR1C2_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_233)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_233)) begin
        C_YR1C2_read = ap_const_logic_1;
    end else begin
        C_YR1C2_read = ap_const_logic_0;
    end
end

/// C_YR2C0_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_233)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_233)) begin
        C_YR2C0_read = ap_const_logic_1;
    end else begin
        C_YR2C0_read = ap_const_logic_0;
    end
end

/// C_YR2C1_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_233)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_233)) begin
        C_YR2C1_read = ap_const_logic_1;
    end else begin
        C_YR2C1_read = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or exitcond1_fu_636_p2 or ap_sig_cseq_ST_st2_fsm_1)
begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond1_fu_636_p2)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (exitcond1_fu_636_p2 or ap_sig_cseq_ST_st2_fsm_1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(ap_const_lv1_0 == exitcond1_fu_636_p2))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp0_stg0_fsm_2 assign process. ///
always @ (ap_sig_bdd_142)
begin
    if (ap_sig_bdd_142) begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp0_stg0_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_23)
begin
    if (ap_sig_bdd_23) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_293)
begin
    if (ap_sig_bdd_293) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_3 assign process. ///
always @ (ap_sig_bdd_407)
begin
    if (ap_sig_bdd_407) begin
        ap_sig_cseq_ST_st8_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_3 = ap_const_logic_0;
    end
end

/// buff_A_val_0_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_165 or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_177 or ap_reg_ppiten_pp0_it4)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))))) begin
        buff_A_val_0_ce0 = ap_const_logic_1;
    end else begin
        buff_A_val_0_ce0 = ap_const_logic_0;
    end
end

/// buff_A_val_0_ce1 assign process. ///
always @ (ap_sig_bdd_165 or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_177 or ap_reg_ppiten_pp0_it4)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))))) begin
        buff_A_val_0_ce1 = ap_const_logic_1;
    end else begin
        buff_A_val_0_ce1 = ap_const_logic_0;
    end
end

/// buff_A_val_0_we1 assign process. ///
always @ (ap_reg_ppstg_exitcond_reg_1600_pp0_it1 or ap_reg_ppstg_or_cond_i_reg_1632_pp0_it1 or ap_sig_bdd_165 or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_177 or ap_reg_ppiten_pp0_it4)
begin
    if (((ap_reg_ppstg_exitcond_reg_1600_pp0_it1 == ap_const_lv1_0) & ~(ap_const_lv1_0 == ap_reg_ppstg_or_cond_i_reg_1632_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))))) begin
        buff_A_val_0_we1 = ap_const_logic_1;
    end else begin
        buff_A_val_0_we1 = ap_const_logic_0;
    end
end

/// buff_A_val_1_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it0 or ap_sig_bdd_165 or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_177 or ap_reg_ppiten_pp0_it4)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it0) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))))) begin
        buff_A_val_1_ce0 = ap_const_logic_1;
    end else begin
        buff_A_val_1_ce0 = ap_const_logic_0;
    end
end

/// buff_A_val_1_ce1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_165 or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_177 or ap_reg_ppiten_pp0_it4)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))))) begin
        buff_A_val_1_ce1 = ap_const_logic_1;
    end else begin
        buff_A_val_1_ce1 = ap_const_logic_0;
    end
end

/// buff_A_val_1_we1 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it1 or exitcond_reg_1600 or ap_sig_bdd_165 or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_177 or ap_reg_ppiten_pp0_it4 or tmp_32_i_reg_1609)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))) & (exitcond_reg_1600 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_32_i_reg_1609))) begin
        buff_A_val_1_we1 = ap_const_logic_1;
    end else begin
        buff_A_val_1_we1 = ap_const_logic_0;
    end
end

/// buff_A_val_2_ce0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it1 or ap_sig_bdd_165 or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_177 or ap_reg_ppiten_pp0_it4)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))))) begin
        buff_A_val_2_ce0 = ap_const_logic_1;
    end else begin
        buff_A_val_2_ce0 = ap_const_logic_0;
    end
end

/// buff_A_val_2_ce1 assign process. ///
always @ (ap_sig_bdd_165 or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_177 or ap_reg_ppiten_pp0_it4)
begin
    if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))))) begin
        buff_A_val_2_ce1 = ap_const_logic_1;
    end else begin
        buff_A_val_2_ce1 = ap_const_logic_0;
    end
end

/// buff_A_val_2_we0 assign process. ///
always @ (ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it1 or exitcond_reg_1600 or ap_sig_bdd_165 or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_177 or ap_reg_ppiten_pp0_it4 or tmp_32_i_reg_1609)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))) & (exitcond_reg_1600 == ap_const_lv1_0) & ~(ap_const_lv1_0 == tmp_32_i_reg_1609))) begin
        buff_A_val_2_we0 = ap_const_logic_1;
    end else begin
        buff_A_val_2_we0 = ap_const_logic_0;
    end
end

/// c_high_thresh_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_233)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_233)) begin
        c_high_thresh_read = ap_const_logic_1;
    end else begin
        c_high_thresh_read = ap_const_logic_0;
    end
end

/// c_invert_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_233)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_233)) begin
        c_invert_read = ap_const_logic_1;
    end else begin
        c_invert_read = ap_const_logic_0;
    end
end

/// c_low_thresh_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_233)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_233)) begin
        c_low_thresh_read = ap_const_logic_1;
    end else begin
        c_low_thresh_read = ap_const_logic_0;
    end
end

/// col_assign_phi_fu_442_p4 assign process. ///
always @ (col_assign_reg_438 or ap_sig_cseq_ST_pp0_stg0_fsm_2 or ap_reg_ppiten_pp0_it1 or exitcond_reg_1600 or col_reg_1604)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp0_stg0_fsm_2) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it1) & (exitcond_reg_1600 == ap_const_lv1_0))) begin
        col_assign_phi_fu_442_p4 = col_reg_1604;
    end else begin
        col_assign_phi_fu_442_p4 = col_assign_reg_438;
    end
end

/// cols_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_233)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_233)) begin
        cols_read = ap_const_logic_1;
    end else begin
        cols_read = ap_const_logic_0;
    end
end

/// dst_data_stream_V_write assign process. ///
always @ (ap_sig_bdd_165 or ap_reg_ppiten_pp0_it2 or ap_reg_ppstg_or_cond3_i_reg_1641_pp0_it3 or ap_sig_bdd_177 or ap_reg_ppiten_pp0_it4)
begin
    if ((~(ap_const_lv1_0 == ap_reg_ppstg_or_cond3_i_reg_1641_pp0_it3) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))))) begin
        dst_data_stream_V_write = ap_const_logic_1;
    end else begin
        dst_data_stream_V_write = ap_const_logic_0;
    end
end

/// rows_read assign process. ///
always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_bdd_233)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~ap_sig_bdd_233)) begin
        rows_read = ap_const_logic_1;
    end else begin
        rows_read = ap_const_logic_0;
    end
end

/// src_data_stream_0_V_read assign process. ///
always @ (ap_reg_ppstg_exitcond_reg_1600_pp0_it1 or ap_reg_ppstg_or_cond_i_reg_1632_pp0_it1 or ap_sig_bdd_165 or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_177 or ap_reg_ppiten_pp0_it4)
begin
    if (((ap_reg_ppstg_exitcond_reg_1600_pp0_it1 == ap_const_lv1_0) & ~(ap_const_lv1_0 == ap_reg_ppstg_or_cond_i_reg_1632_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))))) begin
        src_data_stream_0_V_read = ap_const_logic_1;
    end else begin
        src_data_stream_0_V_read = ap_const_logic_0;
    end
end

/// src_data_stream_1_V_read assign process. ///
always @ (ap_reg_ppstg_exitcond_reg_1600_pp0_it1 or ap_reg_ppstg_or_cond_i_reg_1632_pp0_it1 or ap_sig_bdd_165 or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_177 or ap_reg_ppiten_pp0_it4)
begin
    if (((ap_reg_ppstg_exitcond_reg_1600_pp0_it1 == ap_const_lv1_0) & ~(ap_const_lv1_0 == ap_reg_ppstg_or_cond_i_reg_1632_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))))) begin
        src_data_stream_1_V_read = ap_const_logic_1;
    end else begin
        src_data_stream_1_V_read = ap_const_logic_0;
    end
end

/// src_data_stream_2_V_read assign process. ///
always @ (ap_reg_ppstg_exitcond_reg_1600_pp0_it1 or ap_reg_ppstg_or_cond_i_reg_1632_pp0_it1 or ap_sig_bdd_165 or ap_reg_ppiten_pp0_it2 or ap_sig_bdd_177 or ap_reg_ppiten_pp0_it4)
begin
    if (((ap_reg_ppstg_exitcond_reg_1600_pp0_it1 == ap_const_lv1_0) & ~(ap_const_lv1_0 == ap_reg_ppstg_or_cond_i_reg_1632_pp0_it1) & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))))) begin
        src_data_stream_2_V_read = ap_const_logic_1;
    end else begin
        src_data_stream_2_V_read = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or ap_sig_bdd_165 or ap_reg_ppiten_pp0_it2 or ap_reg_ppiten_pp0_it3 or ap_sig_bdd_177 or ap_reg_ppiten_pp0_it4 or ap_sig_bdd_233 or exitcond1_fu_636_p2)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_233) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if (~(ap_const_lv1_0 == exitcond1_fu_636_p2)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_pp0_stg0_fsm_2 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp0_it3) & ~((ap_sig_bdd_165 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it2)) | (ap_sig_bdd_177 & (ap_const_logic_1 == ap_reg_ppiten_pp0_it4))) & ~(ap_const_logic_1 == ap_reg_ppiten_pp0_it2))) begin
                ap_NS_fsm = ap_ST_st8_fsm_3;
            end else begin
                ap_NS_fsm = ap_ST_pp0_stg0_fsm_2;
            end
        end
        ap_ST_st8_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st2_fsm_1;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


/// ap_sig_bdd_142 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_142 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_165 assign process. ///
always @ (src_data_stream_0_V_empty_n or src_data_stream_1_V_empty_n or src_data_stream_2_V_empty_n or ap_reg_ppstg_exitcond_reg_1600_pp0_it1 or ap_reg_ppstg_or_cond_i_reg_1632_pp0_it1)
begin
    ap_sig_bdd_165 = (((src_data_stream_0_V_empty_n == ap_const_logic_0) & (ap_reg_ppstg_exitcond_reg_1600_pp0_it1 == ap_const_lv1_0) & ~(ap_const_lv1_0 == ap_reg_ppstg_or_cond_i_reg_1632_pp0_it1)) | ((ap_reg_ppstg_exitcond_reg_1600_pp0_it1 == ap_const_lv1_0) & ~(ap_const_lv1_0 == ap_reg_ppstg_or_cond_i_reg_1632_pp0_it1) & (src_data_stream_1_V_empty_n == ap_const_logic_0)) | ((ap_reg_ppstg_exitcond_reg_1600_pp0_it1 == ap_const_lv1_0) & ~(ap_const_lv1_0 == ap_reg_ppstg_or_cond_i_reg_1632_pp0_it1) & (src_data_stream_2_V_empty_n == ap_const_logic_0)));
end

/// ap_sig_bdd_177 assign process. ///
always @ (dst_data_stream_V_full_n or ap_reg_ppstg_or_cond3_i_reg_1641_pp0_it3)
begin
    ap_sig_bdd_177 = ((dst_data_stream_V_full_n == ap_const_logic_0) & ~(ap_const_lv1_0 == ap_reg_ppstg_or_cond3_i_reg_1641_pp0_it3));
end

/// ap_sig_bdd_23 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_23 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_233 assign process. ///
always @ (ap_start or ap_done_reg or rows_empty_n or cols_empty_n or C_XR0C0_empty_n or C_XR0C1_empty_n or C_XR0C2_empty_n or C_XR1C0_empty_n or C_XR1C1_empty_n or C_XR1C2_empty_n or C_XR2C0_empty_n or C_XR2C1_empty_n or C_XR2C2_empty_n or C_YR0C0_empty_n or C_YR0C1_empty_n or C_YR0C2_empty_n or C_YR1C0_empty_n or C_YR1C1_empty_n or C_YR1C2_empty_n or C_YR2C0_empty_n or C_YR2C1_empty_n or c_high_thresh_empty_n or c_low_thresh_empty_n or c_invert_empty_n)
begin
    ap_sig_bdd_233 = ((rows_empty_n == ap_const_logic_0) | (cols_empty_n == ap_const_logic_0) | (C_XR0C0_empty_n == ap_const_logic_0) | (C_XR0C1_empty_n == ap_const_logic_0) | (C_XR0C2_empty_n == ap_const_logic_0) | (C_XR1C0_empty_n == ap_const_logic_0) | (C_XR1C1_empty_n == ap_const_logic_0) | (C_XR1C2_empty_n == ap_const_logic_0) | (C_XR2C0_empty_n == ap_const_logic_0) | (C_XR2C1_empty_n == ap_const_logic_0) | (C_XR2C2_empty_n == ap_const_logic_0) | (C_YR0C0_empty_n == ap_const_logic_0) | (C_YR0C1_empty_n == ap_const_logic_0) | (C_YR0C2_empty_n == ap_const_logic_0) | (C_YR1C0_empty_n == ap_const_logic_0) | (C_YR1C1_empty_n == ap_const_logic_0) | (C_YR1C2_empty_n == ap_const_logic_0) | (C_YR2C0_empty_n == ap_const_logic_0) | (C_YR2C1_empty_n == ap_const_logic_0) | (c_high_thresh_empty_n == ap_const_logic_0) | (c_low_thresh_empty_n == ap_const_logic_0) | (c_invert_empty_n == ap_const_logic_0) | (ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

/// ap_sig_bdd_293 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_293 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_407 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_407 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end
assign buff_A_val_0_address0 = tmp_33_i_fu_699_p1;
assign buff_A_val_0_address1 = tmp_34_i_fu_859_p1;
assign buff_A_val_0_d1 = (tmp_i_i_fu_842_p4 + ap_const_lv8_10);
assign buff_A_val_1_address0 = tmp_33_i_fu_699_p1;
assign buff_A_val_1_address1 = buff_A_val_1_addr_reg_1621;
assign buff_A_val_1_d1 = buff_A_val_0_q0;
assign buff_A_val_2_address0 = tmp_33_i_reg_1616;
assign buff_A_val_2_address1 = tmp_35_i_fu_882_p1;
assign buff_A_val_2_d0 = buff_A_val_1_q0;
assign buff_C_val_0_0_fu_1022_p3 = ((ap_reg_ppstg_tmp_32_i_reg_1609_pp0_it2[0:0]===1'b1)? y_2_fu_1003_p2: buff_C_val_0_0_i_fu_172);
assign buff_C_val_1_0_fu_1016_p3 = ((ap_reg_ppstg_tmp_32_i_reg_1609_pp0_it2[0:0]===1'b1)? buff_C_val_1_0_1_load_reg_1645: buff_C_val_1_0_i_fu_184);
assign buff_C_val_2_0_fu_1009_p3 = ((ap_reg_ppstg_tmp_32_i_reg_1609_pp0_it2[0:0]===1'b1)? buff_A_val_2_q1: buff_C_val_2_0_i_fu_196);
assign col_assign_cast_cast_i_fu_679_p1 = col_assign_phi_fu_442_p4;
assign col_fu_688_p2 = (col_assign_phi_fu_442_p4 + ap_const_lv11_1);
assign cols_cast_i_cast_fu_464_p1 = cols_dout;
assign dst_data_stream_V_din = ((ap_reg_ppstg_or_cond4_i_reg_1636_pp0_it3[0:0]===1'b1)? ap_const_lv8_0: edge_val_2_fu_1269_p3);
assign edge_val1_i_i_fu_1190_p3 = ((tmp_23_i_i_fu_1174_p2[0:0]===1'b1)? edge_val_fu_1184_p2: ap_const_lv8_0);
assign edge_val_1_fu_1264_p2 = (edge_val_2_i_i_reg_1655 ^ ap_const_lv8_FF);
assign edge_val_2_fu_1269_p3 = ((tmp_29_i_i_reg_1566[0:0]===1'b1)? edge_val_1_fu_1264_p2: edge_val_2_i_i_reg_1655);
assign edge_val_2_i_i_fu_1220_p3 = ((tmp_27_i_i_fu_1202_p2[0:0]===1'b1)? p_edge_val_i_i_fu_1212_p3: ap_const_lv8_FF);
assign edge_val_fu_1184_p2 = (tmp_108_fu_1180_p1 ^ ap_const_lv8_FF);
assign edge_weight_fu_1168_p2 = (tmp_19_i_i_fu_1140_p3 + tmp_22_i_i_fu_1160_p3);
assign exitcond1_fu_636_p2 = (row_i_reg_427 == tmp_58_reg_1476? 1'b1: 1'b0);
assign exitcond_fu_683_p2 = (col_assign_phi_fu_442_p4 == tmp_s_reg_1471? 1'b1: 1'b0);
assign grp_fu_1283_p0 = tmp_35_2_1_i_i_fu_1087_p1;
assign grp_fu_1283_p1 = tmp_38_2_1_i_i_reg_1556;
assign grp_fu_1283_p2 = ($signed({{1'b0}, {tmp_39_2_i_i_fu_1082_p0}}) * $signed(tmp_39_2_i_i_fu_1082_p1));
assign grp_fu_1291_p0 = tmp_35_1_i_i_fu_1051_p1;
assign grp_fu_1291_p1 = tmp_36_1_i_i_reg_1511;
assign grp_fu_1291_p2 = grp_fu_1298_p3;
assign grp_fu_1298_p0 = tmp_35_0_2_i_i_fu_1047_p1;
assign grp_fu_1298_p1 = tmp_36_0_2_i_i_reg_1501;
assign grp_fu_1298_p2 = tmp_37_2_2_i_i_fu_1095_p2;
assign grp_fu_1306_p0 = tmp_35_1_1_i_i_fu_1055_p1;
assign grp_fu_1306_p1 = tmp_36_1_1_i_i_reg_1521;
assign grp_fu_1306_p2 = ($signed({{1'b0}, {tmp_37_1_2_i_i_fu_1063_p0}}) * $signed(tmp_37_1_2_i_i_fu_1063_p1));
assign grp_fu_1314_p0 = tmp_35_0_i_i_fu_1029_p1;
assign grp_fu_1314_p1 = tmp_38_0_i_i_reg_1486;
assign grp_fu_1314_p2 = ($signed({{1'b0}, {tmp_39_0_1_i_i_fu_1042_p0}}) * $signed(tmp_39_0_1_i_i_fu_1042_p1));
assign grp_fu_1322_p0 = ap_const_lv13_19;
assign grp_fu_1322_p1 = grp_fu_1322_p10;
assign grp_fu_1322_p10 = tmp_fu_164;
assign grp_fu_1322_p2 = grp_fu_1322_p20;
assign grp_fu_1322_p20 = tmp_84_fu_168;
assign grp_fu_1331_p0 = grp_fu_1331_p00;
assign grp_fu_1331_p00 = src_data_stream_2_V_dout;
assign grp_fu_1331_p1 = ap_const_lv13_19;
assign grp_fu_1331_p2 = grp_fu_1331_p20;
assign grp_fu_1331_p20 = src_data_stream_1_V_dout;
assign grp_fu_1340_p0 = tmp_35_0_i_i_fu_1029_p1;
assign grp_fu_1340_p1 = tmp_36_0_i_i_reg_1481;
assign grp_fu_1340_p2 = ($signed({{1'b0}, {tmp_37_0_1_i_i_fu_1037_p0}}) * $signed(tmp_37_0_1_i_i_fu_1037_p1));
assign grp_fu_1348_p0 = tmp_35_1_i_i_fu_1051_p1;
assign grp_fu_1348_p1 = tmp_38_1_i_i_reg_1516;
assign grp_fu_1348_p2 = grp_fu_1355_p3;
assign grp_fu_1355_p0 = tmp_35_0_2_i_i_fu_1047_p1;
assign grp_fu_1355_p1 = tmp_38_0_2_i_i_reg_1506;
assign grp_fu_1355_p2 = tmp_37_2_2_i_i_fu_1095_p2;
assign grp_fu_1363_p0 = tmp_35_2_1_i_i_fu_1087_p1;
assign grp_fu_1363_p1 = tmp_36_2_1_i_i_reg_1551;
assign grp_fu_1363_p2 = ($signed({{1'b0}, {tmp_37_2_i_i_fu_1077_p0}}) * $signed(tmp_37_2_i_i_fu_1077_p1));
assign grp_fu_1371_p0 = tmp_35_1_1_i_i_fu_1055_p1;
assign grp_fu_1371_p1 = tmp_38_1_1_i_i_reg_1526;
assign grp_fu_1371_p2 = ($signed({{1'b0}, {tmp_39_1_2_i_i_fu_1068_p0}}) * $signed(tmp_39_1_2_i_i_fu_1068_p1));
assign icmp2_fu_720_p2 = (tmp_107_fu_710_p4 == ap_const_lv10_0? 1'b1: 1'b0);
assign icmp_fu_662_p2 = (tmp_103_fu_652_p4 == ap_const_lv9_0? 1'b1: 1'b0);
assign or_cond3_i_fu_753_p2 = (tmp_29_i_reg_1590 & tmp_38_i_fu_747_p2);
assign or_cond4_i_fu_741_p2 = (tmp9_fu_736_p2 | tmp8_fu_731_p2);
assign or_cond_i_fu_705_p2 = (tmp_32_i_fu_694_p2 & tmp_27_i_reg_1580);
assign p_edge_val_i_i_fu_1212_p3 = ((tmp_28_i_i_fu_1207_p2[0:0]===1'b1)? ap_const_lv8_0: edge_val1_i_i_fu_1190_p3);
assign p_shl1_i36_cast_i_fu_922_p1 = p_shl1_i36_i_fu_914_p3;
assign p_shl1_i36_i_fu_914_p3 = {{tmp_85_fu_180}, {ap_const_lv6_0}};
assign p_shl1_i_cast_i_fu_771_p1 = p_shl1_i_i_fu_763_p3;
assign p_shl1_i_i_fu_763_p3 = {{src_data_stream_0_V_dout}, {ap_const_lv6_0}};
assign p_shl2_i37_cast_i_cast_fu_934_p1 = p_shl2_i37_i_fu_926_p3;
assign p_shl2_i37_i_fu_926_p3 = {{tmp_85_fu_180}, {ap_const_lv1_0}};
assign p_shl2_i_cast_i_cast_fu_783_p1 = p_shl2_i_i_fu_775_p3;
assign p_shl2_i_i_fu_775_p3 = {{src_data_stream_0_V_dout}, {ap_const_lv1_0}};
assign p_shl_i40_cast_i_fu_950_p1 = p_shl_i40_i_fu_942_p3;
assign p_shl_i40_i_fu_942_p3 = {{tmp_84_fu_168}, {ap_const_lv7_0}};
assign p_shl_i_cast_i_fu_799_p1 = p_shl_i_i_fu_791_p3;
assign p_shl_i_i_fu_791_p3 = {{src_data_stream_1_V_dout}, {ap_const_lv7_0}};
assign row_cast_cast_i_fu_632_p1 = row_i_reg_427;
assign row_fu_641_p2 = (row_i_reg_427 + ap_const_lv10_1);
assign rows_cast_i_cast_fu_450_p1 = rows_dout;
assign tmp22_fu_1100_p2 = ($signed(grp_fu_1306_p3) + $signed(grp_fu_1363_p3));
assign tmp25_fu_1104_p2 = ($signed(grp_fu_1291_p3) + $signed(grp_fu_1340_p3));
assign tmp29_fu_1114_p2 = ($signed(grp_fu_1371_p3) + $signed(grp_fu_1283_p3));
assign tmp2_cast_fu_813_p1 = tmp2_fu_807_p2;
assign tmp2_fu_807_p2 = (p_shl2_i_cast_i_cast_fu_783_p1 + ap_const_lv10_80);
assign tmp32_fu_1118_p2 = ($signed(grp_fu_1348_p3) + $signed(grp_fu_1314_p3));
assign tmp3_fu_827_p2 = (tmp_6_i_cast_i_fu_823_p1 + p_shl_i_cast_i_fu_799_p1);
assign tmp4_cast_fu_833_p1 = grp_fu_1331_p3;
assign tmp5_cast_fu_964_p1 = tmp5_fu_958_p2;
assign tmp5_fu_958_p2 = (ap_const_lv10_80 + p_shl2_i37_cast_i_cast_fu_934_p1);
assign tmp6_fu_978_p2 = (p_shl_i40_cast_i_fu_950_p1 + tmp_6_i44_cast_i_fu_974_p1);
assign tmp7_cast_fu_984_p1 = grp_fu_1322_p3;
assign tmp8_fu_731_p2 = (icmp_reg_1585 | icmp2_fu_720_p2);
assign tmp9_fu_736_p2 = (tmp_30_i_reg_1595 | tmp_37_i_fu_726_p2);
assign tmp_100_fu_546_p1 = C_YR1C2_dout[7:0];
assign tmp_101_fu_550_p1 = C_YR2C0_dout[7:0];
assign tmp_102_fu_554_p1 = C_YR2C1_dout[7:0];
assign tmp_103_fu_652_p4 = {{row_i_reg_427[ap_const_lv32_9 : ap_const_lv32_1]}};
assign tmp_107_fu_710_p4 = {{col_assign_phi_fu_442_p4[ap_const_lv32_A : ap_const_lv32_1]}};
assign tmp_108_fu_1180_p1 = edge_weight_fu_1168_p2[7:0];
assign tmp_17_i_i_fu_1128_p2 = ($signed(x_weight_2_2_2_i_i_fu_1108_p2) > $signed(16'b0000000000000000)? 1'b1: 1'b0);
assign tmp_18_i_i_fu_1134_p2 = ($signed(ap_const_lv16_0) - $signed(x_weight_2_2_2_i_i_fu_1108_p2));
assign tmp_19_i_i_fu_1140_p3 = ((tmp_17_i_i_fu_1128_p2[0:0]===1'b1)? x_weight_2_2_2_i_i_fu_1108_p2: tmp_18_i_i_fu_1134_p2);
assign tmp_20_i_i_fu_1148_p2 = ($signed(y_weight_2_2_2_i_i_fu_1122_p2) > $signed(16'b0000000000000000)? 1'b1: 1'b0);
assign tmp_21_i_i_fu_1154_p2 = ($signed(ap_const_lv16_0) - $signed(y_weight_2_2_2_i_i_fu_1122_p2));
assign tmp_22_i_i_fu_1160_p3 = ((tmp_20_i_i_fu_1148_p2[0:0]===1'b1)? y_weight_2_2_2_i_i_fu_1122_p2: tmp_21_i_i_fu_1154_p2);
assign tmp_23_i_i_fu_1174_p2 = ($signed(edge_weight_fu_1168_p2) < $signed(16'b11111111)? 1'b1: 1'b0);
assign tmp_24_i_cast_fu_460_p1 = tmp_24_i_fu_454_p2;
assign tmp_24_i_fu_454_p2 = ($signed(ap_const_lv10_3FF) + $signed(rows_cast_i_cast_fu_450_p1));
assign tmp_25_i_cast_fu_474_p1 = tmp_25_i_fu_468_p2;
assign tmp_25_i_fu_468_p2 = ($signed(ap_const_lv11_7FF) + $signed(cols_cast_i_cast_fu_464_p1));
assign tmp_26_i_i_fu_1198_p1 = edge_val1_i_i_fu_1190_p3;
assign tmp_27_i_fu_647_p2 = (row_i_reg_427 < rows_cast_i_cast_reg_1451? 1'b1: 1'b0);
assign tmp_27_i_i_fu_1202_p2 = ($signed(tmp_26_i_i_fu_1198_p1) < $signed(c_high_thresh_read_reg_1441)? 1'b1: 1'b0);
assign tmp_28_i_i_fu_1207_p2 = ($signed(tmp_26_i_i_fu_1198_p1) < $signed(c_low_thresh_read_reg_1446)? 1'b1: 1'b0);
assign tmp_29_i_fu_668_p2 = (row_i_reg_427 != ap_const_lv10_0? 1'b1: 1'b0);
assign tmp_29_i_i_fu_626_p2 = (c_invert_dout == ap_const_lv32_1? 1'b1: 1'b0);
assign tmp_30_i_fu_674_p2 = ($signed(row_cast_cast_i_fu_632_p1) > $signed(tmp_24_i_cast_reg_1456)? 1'b1: 1'b0);
assign tmp_32_i_fu_694_p2 = (col_assign_phi_fu_442_p4 < cols_cast_i_cast_reg_1461? 1'b1: 1'b0);
assign tmp_33_i_fu_699_p1 = col_assign_phi_fu_442_p4;
assign tmp_34_i_fu_859_p1 = ap_reg_ppstg_col_assign_reg_438_pp0_it1;
assign tmp_35_0_1_i_i_fu_1033_p1 = buff_C_val_0_0_i_fu_172;
assign tmp_35_0_2_i_i_fu_1047_p1 = buff_C_val_0_1_i_fu_176;
assign tmp_35_0_i_i_fu_1029_p1 = buff_C_val_0_0_fu_1022_p3;
assign tmp_35_1_1_i_i_fu_1055_p1 = buff_C_val_1_0_i_fu_184;
assign tmp_35_1_2_i_i_fu_1059_p1 = buff_C_val_1_1_i_fu_188;
assign tmp_35_1_i_i_fu_1051_p1 = buff_C_val_1_0_fu_1016_p3;
assign tmp_35_2_1_i_i_fu_1087_p1 = buff_C_val_2_0_i_fu_196;
assign tmp_35_2_i_i_fu_1073_p1 = buff_C_val_2_0_fu_1009_p3;
assign tmp_35_i_fu_882_p1 = ap_reg_ppstg_col_assign_reg_438_pp0_it1;
assign tmp_36_0_1_i_i_fu_566_p1 = $signed(tmp_87_fu_494_p1);
assign tmp_36_0_2_i_i_fu_574_p1 = $signed(tmp_88_fu_498_p1);
assign tmp_36_0_i_i_fu_558_p1 = $signed(tmp_86_fu_490_p1);
assign tmp_36_1_1_i_i_fu_590_p1 = $signed(tmp_90_fu_506_p1);
assign tmp_36_1_2_i_i_fu_598_p1 = $signed(tmp_91_fu_510_p1);
assign tmp_36_1_i_i_fu_582_p1 = $signed(tmp_89_fu_502_p1);
assign tmp_36_2_1_i_i_fu_614_p1 = $signed(tmp_93_fu_518_p1);
assign tmp_36_2_2_i_i_fu_622_p1 = $signed(tmp_94_fu_522_p1);
assign tmp_36_2_i_i_fu_606_p1 = $signed(tmp_92_fu_514_p1);
assign tmp_37_0_1_i_i_fu_1037_p0 = tmp_35_0_1_i_i_fu_1033_p1;
assign tmp_37_0_1_i_i_fu_1037_p1 = tmp_36_0_1_i_i_reg_1491;
assign tmp_37_1_2_i_i_fu_1063_p0 = tmp_35_1_2_i_i_fu_1059_p1;
assign tmp_37_1_2_i_i_fu_1063_p1 = tmp_36_1_2_i_i_reg_1531;
assign tmp_37_2_2_i_i_fu_1095_p0 = tmp_37_2_2_i_i_fu_1095_p00;
assign tmp_37_2_2_i_i_fu_1095_p00 = buff_C_val_2_1_i_fu_192;
assign tmp_37_2_2_i_i_fu_1095_p1 = tmp_36_2_2_i_i_reg_1561;
assign tmp_37_2_2_i_i_fu_1095_p2 = ($signed({{1'b0}, {tmp_37_2_2_i_i_fu_1095_p0}}) * $signed(tmp_37_2_2_i_i_fu_1095_p1));
assign tmp_37_2_i_i_fu_1077_p0 = tmp_35_2_i_i_fu_1073_p1;
assign tmp_37_2_i_i_fu_1077_p1 = tmp_36_2_i_i_reg_1541;
assign tmp_37_i_fu_726_p2 = ($signed(col_assign_cast_cast_i_fu_679_p1) > $signed(tmp_25_i_cast_reg_1466)? 1'b1: 1'b0);
assign tmp_38_0_1_i_i_fu_570_p1 = $signed(tmp_96_fu_530_p1);
assign tmp_38_0_2_i_i_fu_578_p1 = $signed(tmp_97_fu_534_p1);
assign tmp_38_0_i_i_fu_562_p1 = $signed(tmp_95_fu_526_p1);
assign tmp_38_1_1_i_i_fu_594_p1 = $signed(tmp_99_fu_542_p1);
assign tmp_38_1_2_i_i_fu_602_p1 = $signed(tmp_100_fu_546_p1);
assign tmp_38_1_i_i_fu_586_p1 = $signed(tmp_98_fu_538_p1);
assign tmp_38_2_1_i_i_fu_618_p1 = $signed(tmp_102_fu_554_p1);
assign tmp_38_2_i_i_fu_610_p1 = $signed(tmp_101_fu_550_p1);
assign tmp_38_i_fu_747_p2 = (col_assign_phi_fu_442_p4 != ap_const_lv11_0? 1'b1: 1'b0);
assign tmp_39_0_1_i_i_fu_1042_p0 = tmp_35_0_1_i_i_fu_1033_p1;
assign tmp_39_0_1_i_i_fu_1042_p1 = tmp_38_0_1_i_i_reg_1496;
assign tmp_39_1_2_i_i_fu_1068_p0 = tmp_35_1_2_i_i_fu_1059_p1;
assign tmp_39_1_2_i_i_fu_1068_p1 = tmp_38_1_2_i_i_reg_1536;
assign tmp_39_2_i_i_fu_1082_p0 = tmp_35_2_i_i_fu_1073_p1;
assign tmp_39_2_i_i_fu_1082_p1 = tmp_38_2_i_i_reg_1546;
assign tmp_58_fu_484_p2 = (ap_const_lv10_1 + rows_cast_i_cast_fu_450_p1);
assign tmp_6_i44_cast_i_fu_974_p1 = tmp_6_i44_i_fu_968_p2;
assign tmp_6_i44_i_fu_968_p2 = (tmp5_cast_fu_964_p1 + p_shl1_i36_cast_i_fu_922_p1);
assign tmp_6_i_cast_i_fu_823_p1 = tmp_6_i_i_fu_817_p2;
assign tmp_6_i_i_fu_817_p2 = (p_shl1_i_cast_i_fu_771_p1 + tmp2_cast_fu_813_p1);
assign tmp_86_fu_490_p1 = C_XR0C0_dout[7:0];
assign tmp_87_fu_494_p1 = C_XR0C1_dout[7:0];
assign tmp_88_fu_498_p1 = C_XR0C2_dout[7:0];
assign tmp_89_fu_502_p1 = C_XR1C0_dout[7:0];
assign tmp_8_i46_i_fu_987_p2 = (tmp7_cast_fu_984_p1 + tmp6_fu_978_p2);
assign tmp_8_i_i_fu_836_p2 = (tmp3_fu_827_p2 + tmp4_cast_fu_833_p1);
assign tmp_90_fu_506_p1 = C_XR1C1_dout[7:0];
assign tmp_91_fu_510_p1 = C_XR1C2_dout[7:0];
assign tmp_92_fu_514_p1 = C_XR2C0_dout[7:0];
assign tmp_93_fu_518_p1 = C_XR2C1_dout[7:0];
assign tmp_94_fu_522_p1 = C_XR2C2_dout[7:0];
assign tmp_95_fu_526_p1 = C_YR0C0_dout[7:0];
assign tmp_96_fu_530_p1 = C_YR0C1_dout[7:0];
assign tmp_97_fu_534_p1 = C_YR0C2_dout[7:0];
assign tmp_98_fu_538_p1 = C_YR1C0_dout[7:0];
assign tmp_99_fu_542_p1 = C_YR1C1_dout[7:0];
assign tmp_i48_i_fu_993_p4 = {{tmp_8_i46_i_fu_987_p2[ap_const_lv32_F : ap_const_lv32_8]}};
assign tmp_i_i_fu_842_p4 = {{tmp_8_i_i_fu_836_p2[ap_const_lv32_F : ap_const_lv32_8]}};
assign tmp_s_fu_478_p2 = (ap_const_lv11_1 + cols_cast_i_cast_fu_464_p1);
assign x_weight_2_2_2_i_i_fu_1108_p2 = ($signed(tmp25_fu_1104_p2) + $signed(tmp22_fu_1100_p2));
assign y_2_fu_1003_p2 = (ap_const_lv8_10 + tmp_i48_i_fu_993_p4);
assign y_weight_2_2_2_i_i_fu_1122_p2 = ($signed(tmp32_fu_1118_p2) + $signed(tmp29_fu_1114_p2));
always @ (posedge ap_clk)
begin
    rows_cast_i_cast_reg_1451[9] <= 1'b0;
    cols_cast_i_cast_reg_1461[10] <= 1'b0;
    tmp_33_i_reg_1616[63:11] <= 53'b00000000000000000000000000000000000000000000000000000;
end



endmodule //sobel_sobel_filter_core

